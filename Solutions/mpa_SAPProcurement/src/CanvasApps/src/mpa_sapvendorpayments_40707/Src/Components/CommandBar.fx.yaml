CommandBar As CanvasComponent:
    Fill: =RGBA(0, 0, 0, 0)
    Height: =44
    OnReset: =
    ResetCommandBar: =true
    Width: =1692
    X: =0
    Y: =0
    ZIndex: =1

    conCommandBar As groupContainer.horizontalAutoLayoutContainer:
        BorderColor: =
        Height: =CommandBar.Height-1
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: =24
        PaddingRight: =24
        Width: =CommandBar.Width
        ZIndex: =1

        conCommandBarButtons As groupContainer.horizontalAutoLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =1

        conCommandBarSearch As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            FillPortions: =0
            Height: =Parent.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =Self.Width
            Width: |
                =imgCommandBarSearchExecuting.X + imgCommandBarSearchExecuting.Width + 1
            ZIndex: =4

            "icoCommandBarRefreshScreen As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.focusBorder
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Reload
                OnSelect: |
                    =//Refresh the core object data and navigate back to the default screen
                    Navigate('Vendor Payments Details Screen');
                    Set(varSelectedVendorPaymentID,varVendorPaymentNumber);
                    Select(icoCommandBarSearchExecute)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Refresh"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: |-
                    =!Or(
                        varIsProcessing,
                        IsBlank(varVendorPaymentHeader)
                    )
                Width: =30
                X: =imgCommandBarSearchExecuting.X
                Y: =6
                ZIndex: =1

            imgCommandBarSearchExecuting As image:
                Height: =30
                Image: ='loading-grey'
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =varIsProcessing
                Width: =30
                X: =icoCommandBarAdvancedSearch.X+icoCommandBarAdvancedSearch.Width+7
                Y: =6
                ZIndex: =2

            "icoCommandBarAdvancedSearch As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.focusBorder
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.FilterFlat
                OnSelect: |
                    =//Use a function like this to navigate the user to a search all screen containing the search component
                    ClearCollect(
                        colAppNavigationThreads,
                        Table(
                            {
                                Screen: App.ActiveScreen,
                                Order: CountRows(colAppNavigationThreads) + 1
                            }
                        )
                    );
                    Navigate(
                        'Vendor Payment Search Screen',
                        ScreenTransition.Cover
                    );
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Advanced search"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width+10
                Y: =6
                ZIndex: =3

            txtCommandBarSearchInput As text:
                AccessibleLabel: =Self.HintText
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                Color: =varThemeColors.text
                Default: =If(CommandBar.ResetCommandBar,"")
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderColor: =varThemeColors.focusBorder
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =30
                HintText: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Search vendor payment number"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                HoverBorderColor: =varThemeColors.tertiaryGray
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.backgroundFill
                OnChange: |-
                    =Set(
                        varSelectedVendorPaymentID,
                        Trim(Self.Text)
                    )
                PaddingRight: =icoCommandBarSearchExecute.Width
                PressedBorderColor: =varThemeColors.tertiaryGray
                PressedColor: =varThemeColors.text
                PressedFill: =varThemeColors.backgroundFill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Text,
                        Self.HintText
                    )
                Width: |-
                    =Max(
                        125,
                        Len(Self.HintText) * 10
                    )
                X: =cmbCommandBarRecentSearch.X+cmbCommandBarRecentSearch.Width+10
                Y: =6
                ZIndex: =4

            "icoCommandBarSearchExecute As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primaryGray
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.backgroundFillDisabled
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.focusBorder
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.ArrowRight
                OnSelect: |-
                    =If(
                        !IsBlank(varSelectedVendorPaymentID),
                    //Sets processing indicator control behavior 
                        Set(
                            varIsProcessing,
                            true
                        );
                        Set(
                            varFooterMessage,
                            "Loading"
                        );
                        //Remove any existing cached vendor payment data whether variables or collections
                    Set(
                            varVendorPaymentHeader,
                            Blank()
                        );
                        Clear(colVendorPaymentItems);
                        
                    //Call ReadVendorPayment Power Automate to read the vendor Payment from SAP
                    ClearCollect(
                            colReadVendorPaymentResponseTemp,//collection that temporarily stores the vendor Payment response data
                            ReadVendorPayment.Run(
                                JSON(
                                    {Payment: Trim(varSelectedVendorPaymentID)},
                                    JSONFormat.IndentFour
                                )
                            )
                        );
                        
                    //Evalute response conditions
                    Switch(
                            true,
                            And(//Check to see if read vendor Payment call was successful and process happy path logic
                                First(colReadVendorPaymentResponseTemp).Status = "Success",
                                !IsBlank(First(colReadVendorPaymentResponseTemp).Payment)
                            ),
                            //Reset the search text input control
                            Reset(txtCommandBarSearchInput);
                            Set(
                                varVendorPaymentNumber,//Variable that stores the returned vendor Payment number
                                First(colReadVendorPaymentResponseTemp).Payment
                            );
                            Set(
                                varVendorPaymentHeader,//Variable that stores the returned main vendor Payment data
                                First(colReadVendorPaymentResponseTemp).Header
                            );
                            Set(//Set default sort column of items table
                                varVendorPaymentItemsSortByColumn,
                                btnVendorPaymentItemsTableHeaderItem.Text
                            );
                            Set(//Set default sort order of items table
                                varVendorPaymentItemsSortOrder,
                                SortOrder.Ascending
                            );
                            //Reset any controls that interact with existing vendor Payment data
                    Reset(galVendorPaymentItems);
                            Reset(txtVendorPaymentDetailsItemsFilter);
                         /*Cache associated vendor Payment child records. Collections are used to pass updated data back in update vendor Payment transactions
                        Default CrudType fields to 'R'. CrudType will be changed if user changes/removes child records and used by update vendor Payment flow*/
                    UpdateIf(
                                ClearCollect(
                                    colVendorPaymentItems,//Collection that caches associated vendor Payment items
                                    AddColumns(
                                        First(colReadVendorPaymentResponseTemp).Items,
                                        "Description",
                                        LookUp(
                                            First(colReadVendorPaymentResponseTemp).GlAccounts As temp1,
                                            GlAccount = temp1.GlAccount
                                        ).Description,
                                        "_PaymentTypeDisplayValue",
                                        LookUp(
                                            colPaymentTypes,
                                            'Value Code' = Type
                                        ).'Display Value'
                                    )
                                );
                                ,
                                true,
                                {CrudType: "R"}
                            );
                            //Create/update vendor Payment search history record
                    Patch(
                                'SAP Search Histories',
                                Coalesce(
                                    LookUp(
                                        'SAP Search Histories',
                                        And(
                                            'Object ID' = varVendorPaymentNumber,
                                            'Object Type' = 'Object Type (SAP Search Histories)'.'Vendor Payment',
                                            'Created By'.User = varSystemUserID
                                        )
                                    ),
                                    Defaults('SAP Search Histories')
                                ),
                                {
                                    'Object ID': varVendorPaymentNumber,
                                    'Object Type': 'Object Type (SAP Search Histories)'.'Vendor Payment',
                                    Name: Concatenate(
                                        varVendorPaymentNumber,
                                        " - ",
                                        varVendorPaymentHeader.VendorName
                                    ),
                                    'Last Searched On': Now()
                                }
                            );
                            
                    //Check if the patch function was successful and notify if there was any errors.
                    If(
                                !IsEmpty(Errors('SAP Search Histories')),
                                Notify(
                                    First(Errors('SAP Search Histories')).Message,
                                    NotificationType.Error,
                                    0
                                ),
                                Reset(cmbCommandBarRecentSearch);
                                Refresh('SAP Search Histories');
                            );
                        //End if ReadVendorPayment Power Automate call was success
                    ,
                            And(//Flow returned and error
                                First(colReadVendorPaymentResponseTemp).Status = "Error",
                                IsBlank(First(colReadVendorPaymentResponseTemp).Header.Vendor)
                            ),
                            Notify(
                                Concat(
                                    First(colReadVendorPaymentResponseTemp).Messages,
                                    Message,
                                    " "
                                ),
                                NotificationType.Error,
                                0
                            ),
                            And(//Check to see if call was successful, but no vendor Payment was found
                                First(colReadVendorPaymentResponseTemp).Status = "Information",
                                IsBlank(First(colReadVendorPaymentResponseTemp).Payment)
                            ),
                            Notify(
                                With(
                                    {Text: "Vendor payment not found"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Information,
                                7000
                            ),//Default response for an unhandled error return
                            Notify(
                                With(
                                    {Text: "Unexpected error occurred"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Error,
                                0
                            )
                        );
                        
                    //End vendor Payment response switch statement
                    //Reset loading to false as the data query is complete
                    Set(
                            varSelectedVendorPaymentID,//done with selected vendor payment ID variable, set back to blank
                            Blank()
                        );
                        Clear(colReadVendorPaymentResponseTemp);
                        
                    //done with read vendor Payment temp collections, clear cache
                    Set(
                            varIsProcessing,//done processing read vendor Payment, set variable back to false stopping any processing control behavior
                            false
                        );
                        Set(
                            varFooterMessage,
                            Blank()
                        );
                        
                    )
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =With(
                        {Text: "Execute search"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: =!IsBlank(txtCommandBarSearchInput.Text)
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width-Self.Width
                Y: =6
                ZIndex: =5

            cmbCommandBarRecentSearch As combobox:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: If(
                                IsEmpty(
                                    (Filter(
                                        'SAP Search Histories',
                                        'Object Type' = 'Object Type (SAP Search Histories)'.'Vendor Payment',
                                        'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                                    ))
                                ),
                                "No recent vendor payments",
                                "Select recent vendor payments"
                            )
                        },
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                ChevronBackground: =varThemeColors.backgroundFill
                ChevronDisabledBackground: =varThemeColors.backgroundFillDisabled
                ChevronDisabledFill: |
                    =varThemeColors.text
                ChevronFill: =varThemeColors.text
                ChevronHoverBackground: =varThemeColors.secondaryGray
                ChevronHoverFill: |
                    =varThemeColors.text
                Color: =varThemeColors.text
                DefaultSelectedItems: =Blank()
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayFields: =["mpa_name","mpa_name"]
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderColor: =varThemeColors.focusBorder
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =varThemeColors.tertiaryGray
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.secondaryGray
                InputTextPlaceholder: =Self.AccessibleLabel
                IsSearchable: =false
                Items: |-
                    =//Filter the 'SAP Search Histories' dataverse entity based upon the 'Object Type' value that you will to filter/display in the combo box.
                    Sort(
                        Filter(
                            'SAP Search Histories',
                            'Object Type' = 'Object Type (SAP Search Histories)'.'Vendor Payment',
                            'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                        ),
                        'Last Searched On',
                        SortOrder.Descending
                    )
                NoSelectionText: =Self.AccessibleLabel
                OnChange: |-
                    =//When user selects new recent value and not blank, invoke the same command bar search logic as if the user manually entered the vendor payment value
                    Reset(txtCommandBarSearchInput);
                    If(
                        And(
                            !IsBlank(Self.Selected),
                            Or(
                                Self.Selected.'Object ID' <> varSelectedVendorPaymentID,
                                IsBlank(varSelectedVendorPaymentID)
                            )
                        ),
                        Set(
                            varSelectedVendorPaymentID,
                            Self.Selected.'Object ID'
                        );
                        Select(icoCommandBarSearchExecute);
                        
                    )
                PaddingLeft: =12
                PaddingRight: =10
                PressedBorderColor: =varThemeColors.tertiaryGray
                PressedColor: =varThemeColors.altText
                PressedFill: =varThemeColors.backgroundFill
                SearchFields: =["mpa_name","mpa_objectid"]
                SearchItems: =[]
                SelectionColor: =varThemeColors.altText
                SelectionFill: =varThemeColors.primaryGray
                SelectionTagColor: =varThemeColors.text
                SelectionTagFill: =varThemeColors.backgroundFill
                SelectMultiple: =false
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Selected.Name,
                        Self.AccessibleLabel
                    )
                Width: |-
                    =Max(
                        250,
                        Len(Self.AccessibleLabel) * 10
                    )
                X: =shpCommandBarSearchDivider.X+shpCommandBarSearchDivider.Width+10
                Y: =6
                ZIndex: =6

            shpCommandBarSearchDivider As rectangle:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: "Divider"
                        },
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Fill: =varThemeColors.secondaryGray
                Height: =30
                OnSelect: =
                Width: =2
                Y: =6
                ZIndex: =7

