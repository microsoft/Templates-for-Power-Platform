"'Message Screen' As screen":
    Fill: =ColorValue(varThemeColors.background)
    OnVisible: |-
        =/*select the first (unique) element of the collection. That is the Kudo to submit.*/
        Set(varNewSubmission, First(colNewSubmission));

    conContent_Message As groupContainer.verticalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.background)
        Height: =Parent.Height - conHeader_Message.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =20
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        Y: =conHeader_Message.Height + conHeader_Message.Y
        ZIndex: =1

        conPrompt_Message As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.background)
            FillPortions: =0
            Height: =10 + lblPrompt_Message.Height + lblPromptTitle_Message.Height
            LayoutMinHeight: =112
            LayoutMinWidth: =250
            Width: =Parent.Width
            ZIndex: =2

            lblPrompt_Message As label:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.tertiaryGray)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: |-
                    =40
                    //For use with text that has to adjust height:
                    //Self.Size * 2* 1.2
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =0
                PaddingLeft: =10
                PaddingRight: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: =varThemeFont.H3.size
                Text: |-
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Share their accomplishments and how they demonstrate our company's values."},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width
                Y: =lblPromptTitle_Message.Height+2
                ZIndex: =1

            lblPromptTitle_Message As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H1.face
                FontWeight: =varThemeFont.H1.weight
                Height: =Self.Size*2
                Italic: =varThemeFont.H1.italic
                PaddingBottom: =0
                PaddingLeft: =10
                PaddingTop: =0
                Role: =TextRole.Heading1
                Size: =varThemeFont.H1.size
                Text: |+
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Write a Message"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                    
                    
                Width: =Parent.Width
                X: =
                ZIndex: =2

        conInputs_Message As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.Center
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: =Parent.Height-conHeader_Message.Height-conPrompt_Message.Height
            LayoutMinHeight: =75
            LayoutMinWidth: =250
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            RadiusBottomLeft: =24
            RadiusBottomRight: =24
            RadiusTopLeft: =24
            RadiusTopRight: =24
            Width: =Parent.Width*.96
            X: =Parent.Width*.02
            ZIndex: =4

            btnSubmit_Message As button:
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =1
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledColor: =ColorValue(varThemeColors.disabledText)
                DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisplayMode: =If(Or(IsBlank(Trim(txtMessage_Message.Text)),IsBlank(Trim(txtSubject_Message.Text))), DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =ColorValue(varThemeColors.primary)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.button.face
                FontWeight: =varThemeFont.button.weight
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =ColorValue(varThemeColors.tertiary)
                Italic: =varThemeFont.button.italic
                OnSelect: |-
                    =//Add the title and message to the conNewSubmission collection for this recipient
                    
                    UpdateIf(colNewSubmission, Recipient.Id = Recipient.Id, {
                        Title: txtSubject_Message.Text,
                        Message: txtMessage_Message.Text}); 
                    Navigate('Submission Screen');
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.altText)
                PressedFill: =ColorValue(varThemeColors.primary)
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Size: =varThemeFont.button.size
                Text: |-
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Add message"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =150
                X: =412
                Y: =txtMessage_Message.Y+txtMessage_Message.Height + 20
                ZIndex: =1

            txtMessage_Message As text:
                AccessibleLabel: |+
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Message for this Kudo. 500 characters maximum."},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                    
                    
                BorderColor: =ColorValue(varThemeColors.primaryGray)
                BorderThickness: =1
                Color: =ColorValue(varThemeColors.text)
                Default: =
                DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                DisabledColor: =ColorValue(varThemeColors.disabledText)
                DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                Fill: =ColorValue(varThemeColors.backgroundFill)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.paragraph.face
                FontWeight: =varThemeFont.paragraph.weight
                Height: =Self.Size*30
                HintText: |
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Tell us why this employee stands out. Think about how they demonstrated this company value."},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                HoverColor: =ColorValue(varThemeColors.text)
                HoverFill: =ColorValue(varThemeColors.backgroundFill)
                Italic: =varThemeFont.paragraph.italic
                MaxLength: =750
                Mode: =TextMode.MultiLine
                PaddingBottom: =20
                PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                PressedColor: =ColorValue(varThemeColors.text)
                PressedFill: =ColorValue(varThemeColors.backgroundFill)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =varThemeFont.paragraph.size
                Tooltip: ="Enter the Kudo message. Max 500 characters."
                Width: =Parent.Width *.85
                X: =imgRecipient_Message.X
                Y: =conMessageLabels_Message.Y+conMessageLabels_Message.Height+10
                ZIndex: =2

            conMessageLabels_Message As groupContainer.horizontalAutoLayoutContainer:
                Height: =lblMessage_Message.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMode: =LayoutMode.Auto
                PaddingLeft: =5
                PaddingTop: =15
                Width: =Parent.Width *.85
                X: =40
                Y: =txtSubject_Message.Y+txtSubject_Message.Height+23
                ZIndex: =3

                lblMessage_Message As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H2.weight
                    Height: =Self.Size * 2.7
                    Italic: =varThemeFont.H3.italic
                    LayoutMinHeight: =70
                    LayoutMinWidth: =560
                    PaddingBottom: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.H3.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Message"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width *.5
                    X: =imgRecipient_Message.X
                    Y: =
                    ZIndex: =1

                lblMessageCharacterCount_Message As label:
                    Align: =Align.Right
                    AlignInContainer: =AlignInContainer.End
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =If(Len(txtMessage_Message.Text)=500,ColorValue(varThemeColors.error),ColorValue(varThemeColors.text))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.paragraph.face
                    FontWeight: =varThemeFont.paragraph.weight
                    Height: =Self.Size*2
                    Italic: =varThemeFont.paragraph.italic
                    LayoutMinHeight: =70
                    LayoutMinWidth: =560
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Size: =varThemeFont.paragraph.size
                    Text: =Len(txtMessage_Message.Text) & "/750" /*750 is the current maxlength */
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width *.5
                    X: =txtSubject_Message.X
                    Y: =
                    ZIndex: =2

            txtSubject_Message As text:
                AccessibleLabel: |+
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Subject for this Kudo. Short text of 25 characters."},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                    
                    
                BorderColor: =ColorValue(varThemeColors.primaryGray)
                BorderThickness: =1
                Color: =ColorValue(varThemeColors.text)
                Default: =
                DisabledBorderColor: =ColorValue(varThemeColors.primaryGray)
                DisabledColor: =ColorValue(varThemeColors.disabledText)
                DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                Fill: =ColorValue(varThemeColors.backgroundFill)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.paragraph.face
                FontWeight: =varThemeFont.paragraph.weight
                Height: =30
                HintText: |-
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Input subject here"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                HoverBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                HoverColor: =ColorValue(varThemeColors.text)
                HoverFill: =ColorValue(varThemeColors.backgroundFill)
                Italic: =varThemeFont.paragraph.italic
                MaxLength: =50
                PressedBorderColor: =ColorValue(varThemeColors.tertiaryGray)
                PressedColor: =ColorValue(varThemeColors.text)
                PressedFill: =ColorValue(varThemeColors.backgroundFill)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =varThemeFont.paragraph.size
                Tooltip: ="Enter the short title for this Kudo. Max 25 characters."
                Width: =Parent.Width *.85
                X: =imgRecipient_Message.X
                Y: =conSubjectLabels_Message.Y+conSubjectLabels_Message.Height+10
                ZIndex: =4

            conSubjectLabels_Message As groupContainer.horizontalAutoLayoutContainer:
                Height: =lblSubject_Message.Height
                LayoutAlignItems: =LayoutAlignItems.Center
                LayoutMode: =LayoutMode.Auto
                PaddingBottom: =10
                PaddingLeft: =5
                PaddingTop: =15
                Width: =Parent.Width *.85
                X: =40
                Y: =imgSelectedBadge_Message.Y+imgSelectedBadge_Message.Height+20
                ZIndex: =5

                lblSubject_Message As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H2.weight
                    Height: =Self.Size * 2.5    
                    Italic: =varThemeFont.H3.italic
                    LayoutMinHeight: =70
                    LayoutMinWidth: =560
                    PaddingBottom: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.H3.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Subject"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width *.5
                    X: =imgRecipient_Message.X
                    Y: =
                    ZIndex: =1

                lblSubjectCharacterCount_Message As label:
                    Align: =Align.Right
                    AlignInContainer: =AlignInContainer.Start
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =If(Len(txtSubject_Message.Text)=25,ColorValue(varThemeColors.error),ColorValue(varThemeColors.text))
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.paragraph.face
                    FontWeight: =varThemeFont.paragraph.weight
                    Height: =Self.Size * 2.5    
                    Italic: =varThemeFont.paragraph.italic
                    LayoutMinHeight: =70
                    LayoutMinWidth: =560
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Size: =varThemeFont.paragraph.size
                    Text: =Len(txtSubject_Message.Text) & "/50" /*50 is the current maxlength on the "txtSubject_Message" text field. */
                    VerticalAlign: =VerticalAlign.Top
                    Width: =Parent.Width *.5
                    X: =txtSubject_Message.X
                    Y: =
                    ZIndex: =2

            lblRecipientEmail_Message As label:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.paragraph.face
                FontWeight: =varThemeFont.paragraph.weight
                Height: =Self.Size * 2.5 
                Italic: =varThemeFont.paragraph.italic
                PaddingBottom: =0
                PaddingLeft: =10
                PaddingTop: =
                Size: =varThemeFont.paragraph.size
                Text: =varNewSubmission.RecipientEmail
                Tooltip: =Self.Text
                Width: =Parent.Width *.85
                X: |
                    =lblRecipientName_Message.X
                Y: =lblRecipientName_Message.Y+lblRecipientName_Message.Height
                ZIndex: =6

            lblRecipientName_Message As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.paragraph.face
                FontWeight: =varThemeFont.H2.weight
                Height: =Self.Size * 2.5    
                Italic: =varThemeFont.paragraph.italic
                PaddingBottom: =0
                PaddingLeft: =10
                PaddingTop: =10
                Role: =TextRole.Heading3
                Size: =varThemeFont.paragraph.size
                Text: =varNewSubmission.Recipient.DisplayName
                Tooltip: =Self.Text
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width *.85
                X: =imgRecipient_Message.X+imgRecipient_Message.Width
                Y: =imgRecipient_Message.Y-8
                ZIndex: =7

            imgRecipient_Message As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Recipient Photo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Height: =42
                Image: |
                    =/*If(!IsBlank(varNewSubmission.RecipientEmail)&& Office365Users.UserPhotoMetadata(varNewSubmission.RecipientEmail).HasPhoto, Office365Users.UserPhotoV2(varNewSubmission.RecipientEmail), DefaultPFP)*/
                    If(!IsBlank(varNewSubmission.RecipientEmail)&& Office365Users.UserPhotoMetadata(varNewSubmission.RecipientEmail).HasPhoto, Office365Users.UserPhotoV2(varNewSubmission.RecipientEmail), DefaultPFP)
                ImagePosition: =ImagePosition.Fill
                RadiusBottomLeft: =100
                RadiusBottomRight: =100
                RadiusTopLeft: =100
                RadiusTopRight: =100
                Width: =Self.Height
                X: =50
                Y: =30
                ZIndex: =8

            imgSelectedBadge_Message As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Badge Image"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Height: =70
                Image: =First(colNewSubmission).SelectedBadge.'Badge Image'
                RadiusBottomLeft: =100
                RadiusBottomRight: =100
                RadiusTopLeft: =100
                RadiusTopRight: =100
                Width: =70
                X: =40
                Y: =101
                ZIndex: =9

            lblBadgeSubTitle_Message As label:
                Color: =ColorValue(varThemeColors.text)
                Font: =varThemeFont.paragraph.face
                FontWeight: =varThemeFont.paragraph.weight
                Height: =72
                Italic: =varThemeFont.paragraph.italic
                Size: =varThemeFont.paragraph.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: First(colNewSubmission).SelectedBadge.SubTitle},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                VerticalAlign: =VerticalAlign.Top
                Width: =426
                X: =imgSelectedBadge_Message.X+imgSelectedBadge_Message.Width+16
                Y: =lblBadgeName_Message.Y+lblBadgeName_Message.Height-6
                ZIndex: =10

            lblBadgeName_Message As label:
                Color: =ColorValue(varThemeColors.text)
                Font: =varThemeFont.H2.face
                FontWeight: =varThemeFont.H2.face
                Height: =42
                Italic: =varThemeFont.H2.italic
                Size: =varThemeFont.H2.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: First(colNewSubmission).SelectedBadge.Name},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =427
                X: =imgSelectedBadge_Message.X+imgSelectedBadge_Message.Width+14
                Y: =imgSelectedBadge_Message.Y-10
                ZIndex: =11

    conHeader_Message As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.primary)
        Height: =75
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        ZIndex: =2

        conLeftHeaderContent_Message As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =10
            Width: =100
            ZIndex: =1

            icoHeaderBack_Message As icon.BackArrow:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Back"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.BackArrow
                OnSelect: =Back()
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Width: =60
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =1

        conCenterHeaderContent_Message As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =50
            LayoutMinWidth: =50
            ZIndex: =2

            imgMicrosoftLogo_Message As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Company Logo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =Parent.Height
                Image: =varThemeColors.iconimg
                OnSelect: =Navigate('Main Page Screen')
                Width: =Self.Height * 2
                X: =(Parent.Width/2)-(Self.Width/2)
                ZIndex: =1

        conRightHeaderContent_Message As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =50
            Width: =250
            ZIndex: =3

            imgCurrentUser_Message As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Logged In User Photo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Height: =50
                Image: =If(!IsBlank(User().Email)&& Office365Users.UserPhotoMetadata(User().Email).HasPhoto, Office365Users.UserPhotoV2(User().Email), DefaultPFP)
                RadiusBottomLeft: =50
                RadiusBottomRight: =50
                RadiusTopLeft: =50
                RadiusTopRight: =50
                Width: =50
                X: =Parent.Width-Self.Width
                Y: =12
                ZIndex: =4

            "icoSettings_Message As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Settings"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Settings
                OnSelect: =Navigate('Settings Screen')
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =8
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: ="Settings"
                Width: =60
                X: =imgCurrentUser_Message.X-Self.Width-10
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =5

