"'View Kudos Screen' As screen":
    Fill: =ColorValue(varThemeColors.background)
    OnVisible: =

    conContent_ViewKudos As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height - conHeader_ViewKudos.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =20
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        Y: =conHeader_ViewKudos.Height + conHeader_ViewKudos.Y
        ZIndex: =1

        conPrompt_ViewKudos As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =50 + lblPrompt_ViewKudos.Height + lblPromptTitle_ViewKudos.Height
            LayoutMinHeight: =112
            LayoutMinWidth: =250
            ZIndex: =1

            lblPromptTitle_ViewKudos As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H1.face
                FontWeight: =varThemeFont.H1.weight
                Height: =Self.Size * 1.5   
                Italic: =varThemeFont.H1.italic
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingTop: =0
                Role: =TextRole.Heading1
                Size: =varThemeFont.H1.size
                Text: |+
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "My Kudos"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                    
                Width: =Parent.Width - 40
                X: =20
                Y: =20
                ZIndex: =1

            lblPrompt_ViewKudos As label:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.tertiaryGray)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: |-
                    =40
                    //For use with text that has to adjust height:
                    //Self.Size * 2* 1.2
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =0
                PaddingLeft: =0
                PaddingRight: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: =varThemeFont.H3.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    /*With(
                        {Text: "Hello"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    staticLocalizations,
                                    EnglishText = Text && LanguageTag = varUserLanguage
                                ).LocalizedText
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                staticLocalizations,
                                EnglishText = Text && LanguageTag = varUserLanguage
                            ).LocalizedText
                        )
                    ) & ", " & */ User().FullName
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width - 40
                X: =20
                Y: =lblPromptTitle_ViewKudos.Y + lblPromptTitle_ViewKudos.Height + 10
                ZIndex: =2

        conNavigationButtons_ViewKudos As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            FillPortions: =0
            Height: =65
            LayoutMinHeight: =65
            LayoutMinWidth: =250
            ZIndex: =2

            btnKudosReceived_ViewKudos As button:
                BorderColor: =ColorValue(varThemeColors.primaryGray)
                BorderThickness: =0
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.text)
                DisabledFill: =Color.Transparent
                DisplayMode: =If(!locGivenReceived, DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =Color.Transparent
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.button.face
                FontWeight: =If(!locGivenReceived, FontWeight.Semibold, FontWeight.Normal)
                Height: =Parent.Height
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.text)
                HoverFill: =Self.Fill
                Italic: =varThemeFont.button.italic
                OnSelect: =Set(locGivenReceived, false)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.text)
                PressedFill: =Color.Transparent
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =varThemeFont.button.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Kudos received"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =250
                X: =(Parent.Width/2) +  20
                ZIndex: =1

            btnKudosGiven_ViewKudos As button:
                BorderColor: =ColorValue(varThemeColors.primaryGray)
                BorderThickness: =0
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.text)
                DisabledFill: =Color.Transparent
                DisplayMode: =If(locGivenReceived, DisplayMode.Disabled, DisplayMode.Edit)
                Fill: =Color.Transparent
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.button.face
                FontWeight: =If(locGivenReceived, FontWeight.Semibold, FontWeight.Normal)
                Height: =Parent.Height
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.text)
                HoverFill: =Self.Fill
                Italic: =varThemeFont.button.italic
                OnSelect: =Set(locGivenReceived, true)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.text)
                PressedFill: =Color.Transparent
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =varThemeFont.button.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Kudos given"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =250
                X: =(Parent.Width/2) - Self.Width - 20
                ZIndex: =2

            shpButtonUnderline_ViewKudos As rectangle:
                Fill: =ColorValue(varThemeColors.tertiary)
                Height: =2
                Width: =btnKudosGiven_ViewKudos.Width
                X: =If(locGivenReceived, btnKudosGiven_ViewKudos.X, btnKudosReceived_ViewKudos.X)
                Y: =Parent.Height - 2
                ZIndex: =3

            shpContainerSeperator_ViewKudos As rectangle:
                Fill: =ColorValue(varThemeColors.primaryGray)
                Height: =1
                Width: =Parent.Width - (Parent.PaddingLeft * 2)
                Y: =Parent.Height - 1
                ZIndex: =4

        conSearchFilter_ViewKudos As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.secondaryGray)
            FillPortions: =0
            Height: =If(locNominationFilters, 205, 115)
            LayoutMinHeight: =100
            LayoutMinWidth: =250
            RadiusBottomLeft: =16
            RadiusBottomRight: =16
            RadiusTopLeft: =16
            RadiusTopRight: =16
            ZIndex: =3

            icoClearSearch_ViewKudos As icon.Search:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Cancel Search"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Color: =ColorValue(varThemeColors.text)
                DisabledColor: =ColorValue(varThemeColors.tertiaryGray)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =txtSearchBar_ViewKudos.Height
                HoverColor: =ColorValue(varThemeColors.error)
                Icon: =Icon.Cancel
                OnSelect: =Reset(txtSearchBar_ViewKudos)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Rotation: =90
                TabIndex: =0
                Visible: =Len(txtSearchBar_ViewKudos.Text) <> 0
                Width: =txtSearchBar_ViewKudos.Height
                X: =txtSearchBar_ViewKudos.X + txtSearchBar_ViewKudos.Width - Self.Width
                Y: =txtSearchBar_ViewKudos.Y
                ZIndex: =5

            txtSearchBar_ViewKudos As text:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Search Bar"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: |
                    =ColorValue(varThemeColors.primaryGray)
                BorderThickness: =1
                Color: |
                    =ColorValue(varThemeColors.text)
                Default: =""
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                DisabledColor: |
                    =ColorValue(varThemeColors.disabledText)
                DisabledFill: |
                    =ColorValue(varThemeColors.backgroundFillDisabled)
                Fill: |
                    =ColorValue(varThemeColors.backgroundFill)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.paragraph.face
                FontWeight: =varThemeFont.paragraph.weight
                HintText: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Search by name/alias"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                HoverBorderColor: =ColorFade(RGBA(105, 121, 126, 1), -30%)
                HoverColor: =ColorValue(varThemeColors.text)
                HoverFill: =Self.Fill
                Italic: =varThemeFont.paragraph.italic
                PaddingLeft: |+
                    =Self.Height + 5
                    
                PaddingRight: =icoClearSearch_ViewKudos.Width
                PressedBorderColor: =RGBA(105, 121, 126, 1)
                PressedColor: =ColorValue(varThemeColors.text)
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =varThemeFont.paragraph.size
                Width: =Parent.Width - 40
                X: =20
                Y: =50
                ZIndex: =6

            icoSearch_ViewKudos As icon.Search:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Search Icon"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                DisabledColor: =ColorValue(varThemeColors.primary)
                DisplayMode: =DisplayMode.Disabled
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =txtSearchBar_ViewKudos.Height
                Icon: =Icon.Search
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Rotation: =90
                Width: =txtSearchBar_ViewKudos.Height
                X: =txtSearchBar_ViewKudos.X
                Y: =txtSearchBar_ViewKudos.Y
                ZIndex: =7

            btnFilterHistory_ViewKudos As button:
                Align: =Align.Right
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =0
                Color: =ColorValue(varThemeColors.primary)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.disabledText)
                DisabledFill: =Color.Transparent
                Fill: =Color.Transparent
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.button.face
                FontWeight: =FontWeight.Normal
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.tertiary)
                HoverFill: =Color.Transparent
                Italic: =varThemeFont.button.italic
                OnSelect: |-
                    = //If filter Bar is visible, hide the filter bar and clear filters. If it's not visible, then unhide the filter bar
                     If(locNominationFilters = true, Reset(cmbMonthFilter_ViewKudos); Reset(cmbYearFilter_ViewKudos); 
                     //Reset(timConFilterHeight_ViewKudoss); 
                     UpdateContext({locNominationFilters: Not(locNominationFilters)});, UpdateContext({locNominationFilters: Not(locNominationFilters)});)
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.text)
                PressedFill: =Color.Transparent
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =varThemeFont.button.size
                Text: |-
                    = //If Filter Bar is visible, switch out text
                     
                     If(locNominationFilters = true, With(
                        {Text: "Hide Filters"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    ),
                    With(     
                    {Text: "Filter Results"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    ))
                Width: =Len(Self.Text)*(Self.Size*.7)
                X: =Parent.Width - 20 - Self.Width
                Y: =10
                ZIndex: =8

            lblSearchBar_ViewKudos As label:
                Color: =ColorValue(varThemeColors.text)
                Font: =varThemeFont.button.face
                Italic: =varThemeFont.button.italic
                Size: =varThemeFont.button.size
                Text: |-
                    =With(
                        {Text: "Search"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =437
                X: =20
                Y: =10
                ZIndex: =9

            conMonthFilter_ViewKudos As groupContainer.manualLayoutContainer:
                Height: =95
                Visible: =locNominationFilters
                Width: =Parent.Width/2
                Y: =110
                ZIndex: =10

                cmbMonthFilter_ViewKudos As combobox:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Filter by Month"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =ColorValue(varThemeColors.disabledText)
                    BorderThickness: =1
                    ChevronBackground: =ColorValue(varThemeColors.backgroundFill)
                    ChevronDisabledBackground: =ColorValue(varThemeColors.backgroundFillDisabled)
                    ChevronDisabledFill: |
                        =ColorValue(varThemeColors.text)
                    ChevronFill: =ColorValue(varThemeColors.text)
                    ChevronHoverBackground: =ColorValue(varThemeColors.secondaryGray)
                    ChevronHoverFill: |
                        =ColorValue(varThemeColors.text)
                    Color: =ColorValue(varThemeColors.text)
                    DefaultSelectedItems: =
                    DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                    DisabledColor: =ColorValue(varThemeColors.text)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisplayFields: =["Value"]
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    Font: =varThemeFont.paragraph.face
                    FontWeight: =varThemeFont.paragraph.weight
                    Height: =35
                    HoverBorderColor: =ColorValue(varThemeColors.disabledText)
                    HoverColor: =ColorValue(varThemeColors.text)
                    HoverFill: =ColorValue(varThemeColors.secondaryGray)
                    InputTextPlaceholder: |-
                        =With(
                            {Text: "Select Fiscal Year"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    IsSearchable: =false
                    Italic: =varThemeFont.paragraph.italic
                    Items: =colMonthFilter
                    NoSelectionText: =
                    OnChange: =
                    PaddingLeft: =12
                    PaddingRight: =10
                    PressedBorderColor: =ColorValue(varThemeColors.disabledText)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.backgroundFill)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectionColor: =ColorValue(varThemeColors.altText)
                    SelectionFill: =ColorValue(varThemeColors.tertiary)
                    SelectionTagColor: =ColorValue(varThemeColors.altText)
                    SelectionTagFill: =ColorValue(varThemeColors.tertiary)
                    SelectMultiple: =false
                    Size: =varThemeFont.paragraph.size
                    Visible: =locNominationFilters
                    Width: =275
                    X: =lblMonthFilter_ViewKudos.X 
                    Y: =30
                    ZIndex: =1

                lblMonthFilter_ViewKudos As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.button.face
                    Height: =30
                    Italic: =varThemeFont.button.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Size: =varThemeFont.button.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Month"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Visible: =locNominationFilters
                    Width: =93
                    X: =20
                    ZIndex: =2

            conYearFilter_ViewKudos As groupContainer.manualLayoutContainer:
                Height: =95
                Visible: =locNominationFilters
                Width: =Parent.Width/2
                X: =Parent.Width/2
                Y: =110
                ZIndex: =11

                cmbYearFilter_ViewKudos As combobox:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Filter by Year"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =ColorValue(varThemeColors.disabledText)
                    BorderThickness: =1
                    ChevronBackground: =ColorValue(varThemeColors.backgroundFill)
                    ChevronDisabledBackground: =ColorValue(varThemeColors.backgroundFillDisabled)
                    ChevronDisabledFill: |
                        =ColorValue(varThemeColors.text)
                    ChevronFill: =ColorValue(varThemeColors.text)
                    ChevronHoverBackground: =ColorValue(varThemeColors.secondaryGray)
                    ChevronHoverFill: |
                        =ColorValue(varThemeColors.text)
                    Color: =ColorValue(varThemeColors.text)
                    DefaultSelectedItems: =
                    DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                    DisabledColor: =ColorValue(varThemeColors.text)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisplayFields: =["Value"]
                    Fill: =ColorValue(varThemeColors.backgroundFill)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    Font: =varThemeFont.paragraph.face
                    FontWeight: =varThemeFont.paragraph.weight
                    Height: =35
                    HoverBorderColor: =ColorValue(varThemeColors.disabledText)
                    HoverColor: =ColorValue(varThemeColors.text)
                    HoverFill: =ColorValue(varThemeColors.secondaryGray)
                    InputTextPlaceholder: |-
                        =With(
                            {Text: "Select Quarter"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    IsSearchable: =false
                    Italic: =varThemeFont.paragraph.italic
                    Items: =Distinct(Kudos, Year)
                    NoSelectionText: =
                    PaddingLeft: =12
                    PaddingRight: =10
                    PressedBorderColor: =ColorValue(varThemeColors.disabledText)
                    PressedColor: =ColorValue(varThemeColors.altText)
                    PressedFill: =ColorValue(varThemeColors.backgroundFill)
                    SearchFields: =["Value"]
                    SearchItems: =[]
                    SelectionColor: =ColorValue(varThemeColors.altText)
                    SelectionFill: =ColorValue(varThemeColors.tertiary)
                    SelectionTagColor: =ColorValue(varThemeColors.altText)
                    SelectionTagFill: =ColorValue(varThemeColors.tertiary)
                    SelectMultiple: =false
                    Size: =varThemeFont.paragraph.size
                    Visible: =locNominationFilters
                    Width: =275
                    X: =lblYearFilter_ViewKudos.X 
                    Y: =30
                    ZIndex: =1

                lblYearFilter_ViewKudos As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.button.face
                    Height: =30
                    Italic: =varThemeFont.button.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingTop: =0
                    Size: =varThemeFont.button.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Year"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Visible: =locNominationFilters
                    Width: =93
                    X: =15
                    ZIndex: =2

        conViewKudos_ViewKudos As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =225
            LayoutMinHeight: =112
            LayoutMinWidth: =250
            ZIndex: =5

            lblNoData_ViewKudos As label:
                Align: =Align.Center
                Color: =ColorValue(varThemeColors.tertiaryGray)
                Font: =varThemeFont.button.face
                FontWeight: =varThemeFont.button.weight
                Italic: =varThemeFont.button.italic
                Size: =varThemeFont.button.size
                Text: |-
                    =With(
                        {Text: "No Data to Display"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =Parent.Width
                Y: =46
                ZIndex: =1

            "galMyKudos_ViewKudos As gallery.'BrowseLayout_Vertical_OneTextVariant_ver4.0'":
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Kudos"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =RGBA(166, 166, 166, 1)
                Fill: |
                    =ColorValue(varThemeColors.background)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =Parent.Height-15
                Items: |-
                    =If(locGivenReceived, Filter(Kudos, 'Kudos (Views)'.'Kudos I have Sent'
                    , Len(txtSearchBar_ViewKudos.Text) = 0 || txtSearchBar_ViewKudos.Text in 'Recipient Name', Len(cmbMonthFilter_ViewKudos.Selected.Value) = 0 || 'Month Number' = cmbMonthFilter_ViewKudos.Selected.'Month Number', Len(cmbYearFilter_ViewKudos.Selected.Value) = 0 || Year = cmbYearFilter_ViewKudos.Selected.Value
                    ), Filter(Kudos,'Kudos (Views)'.'Kudos I have received'
                    , Len(txtSearchBar_ViewKudos.Text) = 0 || txtSearchBar_ViewKudos.Text in 'Sender Name', Len(cmbMonthFilter_ViewKudos.Selected.Value) = 0 || 'Month Number' = cmbMonthFilter_ViewKudos.Selected.'Month Number'
                    ))
                Layout: =Layout.Vertical
                TemplateFill: =ColorValue(varThemeColors.backgroundFill)
                TemplatePadding: =10
                TemplateSize: |
                    =125
                Width: =Parent.Width
                ZIndex: =2

                shpSeparator_ViewSubmission As rectangle:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    Fill: =ColorValue(varThemeColors.secondaryGray)
                    Height: =1
                    OnSelect: =Select(Parent)
                    Width: =Parent.TemplateWidth
                    Y: =Parent.TemplateHeight - 1
                    ZIndex: =3

                lblDateGallery_ViewKudos As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.primaryGray)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    Fill: |
                        =Color.Transparent
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.paragraph.face
                    FontWeight: =varThemeFont.paragraph.weight
                    Height: =23
                    Italic: =varThemeFont.paragraph.italic
                    PaddingBottom: =0
                    PaddingLeft: =20
                    PaddingTop: =0
                    Role: =TextRole.Heading2
                    Size: =varThemeFont.paragraph.size
                    Text: =DateValue(ThisItem.'Created On')
                    Width: =Parent.Width/2
                    X: =imgBadge_ViewKudos.Width + imgBadge_ViewKudos.X
                    Y: =82
                    ZIndex: =4

                lblTitleGallery_ViewKudos As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.tertiaryGray)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.paragraph.face
                    FontWeight: =FontWeight.Semibold
                    Height: =28
                    Italic: =varThemeFont.H3.italic
                    PaddingBottom: =0
                    PaddingLeft: =20
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: |
                        =varThemeFont.paragraph.size
                    Text: |-
                        =// Define a variable named "Text" with the value "{value}"
                        ThisItem.Title
                    Width: =Parent.Width/1.5
                    X: =imgBadge_ViewKudos.Width + imgBadge_ViewKudos.X
                    Y: =54
                    ZIndex: =5

                lblNameGallery_ViewKudos As label:
                    BorderColor: =RGBA(0, 0, 0, 0)
                    BorderStyle: =BorderStyle.None
                    BorderThickness: =2
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H1.face
                    FontWeight: =varThemeFont.H1.weight
                    Height: =31
                    Italic: =varThemeFont.H1.italic
                    PaddingBottom: =0
                    PaddingLeft: =20
                    PaddingTop: =0
                    Role: =TextRole.Heading1
                    Size: |
                        =varThemeFont.H1.size - 8
                    Text: =If(locGivenReceived, ThisItem.Recipient.'Full Name', ThisItem.Sender.'Full Name')
                    VerticalAlign: =VerticalAlign.Bottom
                    Width: =Parent.Width/2
                    X: =imgBadge_ViewKudos.Width + imgBadge_ViewKudos.X
                    Y: =20
                    ZIndex: =6

                imgPFPGallery_ViewKudos As image:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Recipient Photo"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Height: =85
                    Image: =If(locGivenReceived, If(!IsBlank(ThisItem.Recipient.'Primary Email') && Office365Users.UserPhotoMetadata(ThisItem.Recipient.'Primary Email').HasPhoto, Office365Users.UserPhotoV2(ThisItem.Recipient.'Primary Email'), DefaultPFP), If(!IsBlank(ThisItem.Sender.'Primary Email') && Office365Users.UserPhotoMetadata(ThisItem.Sender.'Primary Email').HasPhoto, Office365Users.UserPhotoV2(ThisItem.Sender.'Primary Email'), DefaultPFP))
                    ImagePosition: =ImagePosition.Fill
                    OnSelect: =Select(Parent)
                    RadiusBottomLeft: =100
                    RadiusBottomRight: =100
                    RadiusTopLeft: =100
                    RadiusTopRight: =100
                    Width: =85
                    X: =20
                    Y: =20
                    ZIndex: =7

                btnNext_ViewKudos As icon.ChevronRight:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Kudo Details"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =ColorValue(varThemeColors.tertiaryGray)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    Height: =36
                    Icon: =Icon.ChevronRight
                    OnSelect: =Select(Parent); Set(varSelectedKudos, ThisItem); Set(varDirectReport, false); Navigate('Details Screen')
                    Width: =31
                    X: =Parent.TemplateWidth-Self.Width-25
                    Y: =(Parent.TemplateHeight/2)-(Self.Height/2)
                    ZIndex: =8

                imgBadge_ViewKudos As image:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Badge"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =Color.White
                    BorderThickness: =3
                    Height: =50
                    Image: =LookUp(colBadges, Badge=ThisItem.Badge.Badge).'Badge Image'
                    ImagePosition: =ImagePosition.Fill
                    RadiusBottomLeft: =100
                    RadiusBottomRight: =100
                    RadiusTopLeft: =100
                    RadiusTopRight: =100
                    Width: =Self.Height
                    X: =imgPFPGallery_ViewKudos.X+imgPFPGallery_ViewKudos.Width-25
                    Y: =68
                    ZIndex: =9

                btnKudosGivenView_ViewKudos As button:
                    BorderColor: =RGBA(255, 255, 255, 0)
                    Color: =RGBA(255, 255, 255, 0)
                    DisabledBorderColor: =RGBA(255, 255, 255, 0)
                    DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledFill: =RGBA(255, 255, 255, 0)
                    Fill: =RGBA(255, 255, 255, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    Height: =Parent.TemplateHeight
                    HoverBorderColor: =RGBA(255, 255, 255, 0)
                    HoverColor: =RGBA(255, 255, 255, 0)
                    HoverFill: =RGBA(255, 255, 255, 0)
                    OnSelect: =Select(Parent); Set(varSelectedKudos, ThisItem); Set(varDirectReport, false); Navigate('Details Screen')
                    PressedBorderColor: =RGBA(255, 255, 255, 0)
                    PressedColor: =ColorValue(varThemeColors.primary)
                    PressedFill: =RGBA(255, 255, 255, 0)
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =24
                    Text: =""
                    Width: =Parent.TemplateWidth
                    ZIndex: =10

    conHeader_ViewKudos As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.primary)
        Height: =75
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        ZIndex: =2

        conLeftHeaderContent_BadgeSelection_1 As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =10
            Width: =100
            ZIndex: =1

            icoHeaderBack_BadgeSelection_3 As icon.BackArrow:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Back"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.BackArrow
                OnSelect: =Back()
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                Width: =60
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =1

        conCenterHeaderContent_BadgeSelection_1 As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =50
            LayoutMinWidth: =50
            ZIndex: =2

            imgMicrosoftLogo_BadgeSelection_3 As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Company Logo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =Parent.Height
                Image: =varThemeColors.iconimg
                OnSelect: =Navigate('Main Page Screen')
                Width: =Self.Height * 2
                X: =(Parent.Width/2)-(Self.Width/2)
                ZIndex: =1

        conRightHeaderContent_BadgeSelection_1 As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =50
            Width: =250
            ZIndex: =3

            imgCurrentUser_BadgeSelection_3 As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Logged In User Photo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Height: =50
                Image: =If(!IsBlank(User().Email)&& Office365Users.UserPhotoMetadata(User().Email).HasPhoto, Office365Users.UserPhotoV2(User().Email), DefaultPFP)
                RadiusBottomLeft: =50
                RadiusBottomRight: =50
                RadiusTopLeft: =50
                RadiusTopRight: =50
                Width: =50
                X: =Parent.Width-Self.Width
                Y: =12
                ZIndex: =4

            "icoSettings_BadgeSelection_3 As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Settings"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Settings
                OnSelect: =Navigate('Settings Screen')
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =8
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: ="Settings"
                Width: =60
                X: =imgCurrentUser_BadgeSelection_3.X-Self.Width-10
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =5

