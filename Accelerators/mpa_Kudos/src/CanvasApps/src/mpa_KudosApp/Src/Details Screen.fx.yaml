"'Details Screen' As screen":
    Fill: =ColorValue(varThemeColors.background)

    conContent_Details As groupContainer.verticalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.backgroundFill)
        Height: =Parent.Height - Self.Y-15
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =20
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        PaddingTop: =25
        RadiusBottomLeft: =24
        RadiusBottomRight: =24
        RadiusTopLeft: =24
        RadiusTopRight: =24
        Width: =Parent.Width*.96
        X: =Parent.Width*.02
        Y: =conHeader_Details.Height+20
        ZIndex: =1

        lblH3Date_Details As label:
            Align: =Align.Right
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(varThemeColors.tertiaryGray)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =ColorValue(varThemeColors.tertiary)
            FocusedBorderThickness: =4
            Font: =varThemeFont.paragraph.face
            FontWeight: =varThemeFont.H2.weight
            Height: =Self.Size * 2.5    
            Italic: =varThemeFont.paragraph.italic
            LayoutMinHeight: =70
            LayoutMinWidth: =560
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingRight: =20
            PaddingTop: =0
            Role: =TextRole.Heading3
            Size: =varThemeFont.paragraph.size
            Text: =varSelectedKudos.'Created On'
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.Width-Self.X
            Y: =lblH2Title_Details.Y + lblH2Title_Details.Height
            ZIndex: =1

        imgSelectedBadge_Details As image:
            Height: =90
            Image: =LookUp(colBadges, Badge=varSelectedKudos.Badge.Badge).'Badge Image'
            LayoutMinHeight: =320
            LayoutMinWidth: =320
            RadiusBottomLeft: =100
            RadiusBottomRight: =100
            RadiusTopLeft: =100
            RadiusTopRight: =100
            Width: =90
            ZIndex: =2

        lblBadgeName_Details As label:
            Align: =Align.Center
            Color: =ColorValue(varThemeColors.text)
            Font: =varThemeFont.H1.face
            FontWeight: =varThemeFont.H1.face
            Height: =42
            LayoutMinHeight: =70
            LayoutMinWidth: =560
            Size: =varThemeFont.H1.size
            Text: |-
                =// Define a variable named "Text" with the value "{value}"
                With(
                    {Text: varSelectedKudos.Badge.Name},
                    // Check if a localized text exists for "Text" in the user's preferred language
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                )
            Width: =427
            ZIndex: =3

        lblBadgeSubTitle_Details As label:
            Align: =Align.Center
            Color: =ColorValue(varThemeColors.text)
            Font: =varThemeFont.paragraph.face
            FontWeight: =varThemeFont.paragraph.weight
            Height: =72
            Italic: =varThemeFont.paragraph.italic
            LayoutMinHeight: =70
            LayoutMinWidth: =560
            Size: =varThemeFont.paragraph.size
            Text: |-
                =// Define a variable named "Text" with the value "{value}"
                With(
                    {Text: varSelectedKudos.Badge.SubTitle},
                    // Check if a localized text exists for "Text" in the user's preferred language
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                )
            VerticalAlign: =VerticalAlign.Top
            Width: =426
            ZIndex: =4

        lblH2Title_Details As label:
            AutoHeight: =true
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(varThemeColors.text)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =ColorValue(varThemeColors.primary)
            FocusedBorderThickness: =4
            Font: =varThemeFont.H2.face
            FontWeight: =varThemeFont.H2.weight
            Height: =Self.Size * 2.5    
            Italic: =varThemeFont.H2.italic
            LayoutMinHeight: =70
            LayoutMinWidth: =560
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Role: =TextRole.Heading2
            Size: =20
            Text: =varSelectedKudos.Title
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.Width*.66
            ZIndex: =5

        lblH3Sender_Details As label:
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(varThemeColors.tertiaryGray)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =ColorValue(varThemeColors.primary)
            FocusedBorderThickness: =4
            Font: =varThemeFont.paragraph.face
            FontWeight: =varThemeFont.paragraph.weight
            Height: =Self.Size * 2.5    
            Italic: =varThemeFont.paragraph.italic
            LayoutMinHeight: =70
            LayoutMinWidth: =560
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Role: =TextRole.Heading3
            Size: =varThemeFont.paragraph.size
            Text: |-
                =// Define a variable named "Text" with the value "{value}"
                If(Or(!locGivenReceived,varDirectReport), 
                With(
                    {Text: "From: "},
                    // Check if a localized text exists for "Text" in the user's preferred language
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                ) & varSelectedKudos.Sender.'Full Name'
                , With(
                    {Text: "To: "},
                    // Check if a localized text exists for "Text" in the user's preferred language
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                ) & varSelectedKudos.Recipient.'Full Name')
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.Width
            ZIndex: =6

        lblParagraphMessage_Details As label:
            AutoHeight: =true
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(varThemeColors.tertiaryGray)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =ColorValue(varThemeColors.primary)
            FocusedBorderThickness: =4
            Font: =varThemeFont.paragraph.face
            FontWeight: =varThemeFont.paragraph.weight
            Height: =Self.Size * 2.5    
            Italic: =varThemeFont.paragraph.italic
            LayoutMinHeight: =70
            LayoutMinWidth: =560
            PaddingBottom: =0
            PaddingLeft: =0
            PaddingTop: =0
            Size: =varThemeFont.paragraph.size
            Text: |
                =varSelectedKudos.Message
            VerticalAlign: =VerticalAlign.Top
            Width: =Parent.Width
            ZIndex: =7

    conHeader_Details As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.primary)
        Height: =75
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        ZIndex: =3

        conLeftHeaderContent_Details As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =10
            Width: =100
            ZIndex: =1

            icoHeaderBack_BadgeSelection_2 As icon.BackArrow:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Back"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.BackArrow
                OnSelect: =Back()
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                Width: =60
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =1

        conCenterHeaderContent_Details As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =50
            LayoutMinWidth: =50
            ZIndex: =2

            imgMicrosoftLogo_BadgeSelection_2 As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Company Logo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =Parent.Height
                Image: =varThemeColors.iconimg
                OnSelect: =Navigate('Main Page Screen')
                Width: =Self.Height * 2
                X: =(Parent.Width/2)-(Self.Width/2)
                ZIndex: =1

        conRightHeaderContent_Details As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =50
            Width: =250
            ZIndex: =3

            imgCurrentUser_BadgeSelection_2 As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Logged In User Photo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Height: =50
                Image: =If(!IsBlank(User().Email)&& Office365Users.UserPhotoMetadata(User().Email).HasPhoto, Office365Users.UserPhotoV2(User().Email), DefaultPFP)
                RadiusBottomLeft: =50
                RadiusBottomRight: =50
                RadiusTopLeft: =50
                RadiusTopRight: =50
                Width: =50
                X: =Parent.Width-Self.Width
                Y: =12
                ZIndex: =4

            "icoSettings_BadgeSelection_2 As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Settings"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Settings
                OnSelect: =Navigate('Settings Screen')
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =8
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: ="Settings"
                Width: =60
                X: =imgCurrentUser_BadgeSelection_2.X-Self.Width-10
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =5

