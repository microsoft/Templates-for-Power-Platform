"'Settings Screen' As screen":
    Fill: =ColorValue(varThemeColors.background)

    conContent_Settings As groupContainer.verticalAutoLayoutContainer:
        Height: |
            =Parent.Height*.77
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =20
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width*.96
        X: =Parent.Width*.02
        Y: =conHeader_Settings.Height+20
        ZIndex: =1

        lblTitle_Settings As label:
            AutoHeight: =true
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            BorderThickness: =2
            Color: =ColorValue(varThemeColors.text)
            DisabledBorderColor: =RGBA(0, 0, 0, 0)
            FocusedBorderColor: =ColorValue(varThemeColors.primary)
            FocusedBorderThickness: =4
            Font: =varThemeFont.H1.face
            FontWeight: =varThemeFont.H1.weight
            Height: =Self.Size * 2.5    
            Italic: =varThemeFont.H1.italic
            LayoutMinHeight: =70
            LayoutMinWidth: =560
            PaddingBottom: =0
            PaddingLeft: =40
            PaddingTop: =0
            Role: =TextRole.Heading1
            Size: =varThemeFont.H1.size
            Text: |-
                =// Lookup the appropriately localized text
                With(
                    {Text: "Settings"},
                    // Check if a localized text exists for "Text" in the user's preferred language
                    If(
                        // If the localized text is blank, return the default text
                        IsBlank(
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        ),
                        Text,
                        // If a localized text is found, return that instead of the default text
                        LookUp(
                            colUserLocalizedStrings,
                            'English Value' = Text
                        ).'Localized Value'
                    )
                )
            Width: =Parent.Width *.80
            X: =40
            ZIndex: =2

        conThemeSwitchContainer_SettingsScreen As groupContainer.manualLayoutContainer:
            Fill: =ColorValue(varThemeColors.backgroundFill)
            FillPortions: =0
            Height: ='Settings Screen'.Height*.25
            LayoutMinHeight: =112
            LayoutMinWidth: =250
            RadiusBottomLeft: =24
            RadiusBottomRight: =24
            RadiusTopLeft: =24
            RadiusTopRight: =24
            Width: =Parent.Width
            Y: =249
            ZIndex: =3

            lblSubtitle_Settings As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H2.face
                FontWeight: =varThemeFont.H2.weight
                Height: =28
                Italic: =varThemeFont.H2.italic
                PaddingBottom: =0
                PaddingLeft: =40
                PaddingTop: =0
                Role: =TextRole.Heading2
                Size: =varThemeFont.H2.size
                Text: |-
                    =// Lookup the appropriately localized text
                    With(
                        {Text: "Color Mode"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =594
                Y: =27
                ZIndex: =7

            grpContrast_Settings As group:
                Height: =5
                Width: =5
                X: =6
                Y: =-16
                ZIndex: =18

                lblH3ModeTitleContrast_Settings As label:
                    Align: =Align.Center
                    BorderColor: =
                    BorderStyle: =
                    BorderThickness: =
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H3.weight
                    Height: =Self.Size * 2.5    
                    Italic: =varThemeFont.H3.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.H3.size
                    Text: |-
                        =// Lookup the appropriately localized text
                        With(
                            {Text: "High Contrast"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Width: =imgSettingsContrast_Settings.Width+30
                    X: =imgSettingsContrast_Settings.X-15
                    Y: =imgSettingsContrast_Settings.Y + imgSettingsContrast_Settings.Height
                    ZIndex: =2

                imgSettingsContrast_Settings As image:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "High Contrast Mode"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =If(varThemeColors.name="Contrast",ColorValue(varThemeColors.primary) ,ColorValue(varThemeColors.tertiaryGray))
                    BorderThickness: =If(varThemeColors.name="Contrast", 4,1)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Height: =130
                    Image: =imgSettingsContrast
                    OnSelect: =Set(varThemeColors, varContrastTheme)
                    PressedBorderColor: =ColorValue(varThemeColors.tertiary)
                    TabIndex: =0
                    Width: =130
                    X: =424
                    Y: =80
                    ZIndex: =3

            grpLight_Settings As group:
                Height: =5
                Width: =5
                X: =26
                Y: =4
                ZIndex: =20

                lblH3ModeTitleLight_Settings As label:
                    Align: =Align.Center
                    BorderColor: =
                    BorderStyle: =
                    BorderThickness: =
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H3.weight
                    Height: =Self.Size * 2.5    
                    Italic: =varThemeFont.H3.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.H3.size
                    Text: |
                        =// Lookup the appropriately localized text
                        With(
                            {Text: "Light"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Width: =imgSettingsLight_Settings.Width
                    X: =imgSettingsLight_Settings.X
                    Y: =imgSettingsLight_Settings.Y + imgSettingsLight_Settings.Height
                    ZIndex: =5

                imgSettingsLight_Settings As image:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Light Mode"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =ColorValue(varThemeColors.primary)
                    BorderThickness: =If(varThemeColors.name="Light", 4,0)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Height: =130
                    Image: =imgSettingsLight
                    OnSelect: =Set(varThemeColors, varLightTheme)
                    PressedBorderColor: =ColorValue(varThemeColors.tertiary)
                    TabIndex: =0
                    Width: =130
                    X: =40
                    Y: =80
                    ZIndex: =6

            grpDark_Settings As group:
                Height: =5
                Width: =5
                X: =40
                Y: =40
                ZIndex: =23

                lblH3ModeTitleDark_Settings As label:
                    Align: =Align.Center
                    BorderColor: =
                    BorderStyle: =
                    BorderThickness: =
                    Color: =ColorValue(varThemeColors.text)
                    DisabledBorderColor: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =ColorValue(varThemeColors.primary)
                    FocusedBorderThickness: =4
                    Font: =varThemeFont.H3.face
                    FontWeight: =varThemeFont.H3.weight
                    Height: =Self.Size * 2.5    
                    Italic: =varThemeFont.H3.italic
                    PaddingBottom: =0
                    PaddingLeft: =0
                    PaddingRight: =0
                    PaddingTop: =0
                    Role: =TextRole.Heading3
                    Size: =varThemeFont.H3.size
                    Text: |-
                        =// Lookup the appropriately localized text
                        With(
                            {Text: "Dark"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Width: =imgSettingsDark_Settings.Width
                    X: =imgSettingsDark_Settings.X
                    Y: =imgSettingsDark_Settings.Y + imgSettingsDark_Settings.Height
                    ZIndex: =1

                imgSettingsDark_Settings As image:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {Text: "Dark Mode"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    BorderColor: =If(varThemeColors.name="Dark",ColorValue(varThemeColors.primary) ,ColorValue(varThemeColors.tertiaryGray))
                    BorderThickness: =If(varThemeColors.name="Dark", 4,1)
                    DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                    DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                    FocusedBorderColor: =ColorValue(varThemeColors.info)
                    FocusedBorderThickness: =4
                    Height: =130
                    Image: =imgSettingsDark
                    OnSelect: =Set(varThemeColors, varDarkTheme)
                    PressedBorderColor: =ColorValue(varThemeColors.tertiary)
                    TabIndex: =0
                    Width: =130
                    X: =232
                    Y: =80
                    ZIndex: =4

    conHeader_Settings As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.primary)
        Height: =75
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        ZIndex: =3

        conLeftHeaderContent_BadgeSelection_2 As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =10
            Width: =100
            ZIndex: =1

            icoHeaderBack_BadgeSelection_4 As icon.BackArrow:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Back"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.BackArrow
                OnSelect: =Back()
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                Width: =60
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =1

        conCenterHeaderContent_BadgeSelection_2 As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =50
            LayoutMinWidth: =50
            ZIndex: =2

            imgMicrosoftLogo_BadgeSelection_4 As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Company Logo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =Parent.Height
                Image: =varThemeColors.iconimg
                OnSelect: =Navigate('Main Page Screen')
                Width: =Self.Height * 2
                X: =(Parent.Width/2)-(Self.Width/2)
                ZIndex: =1

        conRightHeaderContent_BadgeSelection_2 As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =50
            Width: =250
            ZIndex: =3

            imgCurrentUser_BadgeSelection_4 As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Logged In User Photo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Height: =50
                Image: =If(!IsBlank(User().Email)&& Office365Users.UserPhotoMetadata(User().Email).HasPhoto, Office365Users.UserPhotoV2(User().Email), DefaultPFP)
                RadiusBottomLeft: =50
                RadiusBottomRight: =50
                RadiusTopLeft: =50
                RadiusTopRight: =50
                Width: =50
                X: =Parent.Width-Self.Width
                Y: =12
                ZIndex: =4

            "icoSettings_BadgeSelection_4 As icon.'3DPrinting'":
                AccessibleLabel: ="Settings"
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Settings
                OnSelect: =Navigate('Settings Screen')
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =8
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: ="Settings"
                Visible: =false
                Width: =60
                X: =imgCurrentUser_BadgeSelection_4.X-Self.Width-10
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =5

