"'Badge Selection Screen' As screen":
    Fill: =ColorValue(varThemeColors.background)
    OnVisible: |-
        =/*select the first (unique) element of the collection. That is the Kudo to submit.*/
        Set(varNewSubmission, First(colNewSubmission));

    conContent_BadgeSelection As groupContainer.verticalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.background)
        Height: =Parent.Height - conHeader_BadgeSelection.Height
        LayoutAlignItems: =LayoutAlignItems.Stretch
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =20
        LayoutMode: =LayoutMode.Auto
        LayoutOverflowY: =LayoutOverflow.Scroll
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        Y: =conHeader_BadgeSelection.Height + conHeader_BadgeSelection.Y
        ZIndex: =1

        conPrompt_BadgeSelection As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.background)
            FillPortions: =0
            Height: =1 + lblPrompt_BadgeSelection.Height + lblPromptTitle_BadgeSelection.Height
            LayoutMinHeight: =112
            LayoutMinWidth: =250
            ZIndex: =2

            lblPrompt_BadgeSelection As label:
                AutoHeight: =true
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.tertiaryGray)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H3.face
                FontWeight: =varThemeFont.H3.weight
                Height: =Self.Size * 2.4
                Italic: =varThemeFont.H3.italic
                PaddingBottom: =0
                PaddingLeft: =10
                PaddingRight: =0
                PaddingTop: =0
                Role: =TextRole.Heading3
                Size: =varThemeFont.H3.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Select the badge that best represents the Kudos you're giving:"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                VerticalAlign: =VerticalAlign.Top
                Width: =Parent.Width
                Y: =lblPromptTitle_BadgeSelection.Height+2
                ZIndex: =1

            lblPromptTitle_BadgeSelection As label:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                BorderThickness: =2
                Color: =ColorValue(varThemeColors.text)
                DisabledBorderColor: =RGBA(0, 0, 0, 0)
                FocusedBorderColor: =ColorValue(varThemeColors.primary)
                FocusedBorderThickness: =4
                Font: =varThemeFont.H1.face
                FontWeight: =varThemeFont.H1.weight
                Height: =Self.Size*2
                Italic: =varThemeFont.H1.italic
                PaddingBottom: =0
                PaddingLeft: =10
                PaddingRight: =50
                PaddingTop: =0
                Role: =TextRole.Heading1
                Size: =varThemeFont.H1.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Select Kudos Type"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =Parent.Width
                X: =
                ZIndex: =2

        conInputs_BadgeSelection As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Fill: =ColorValue(varThemeColors.backgroundFillDisabled)
            FillPortions: =0
            Height: =Parent.Height-conHeader_BadgeSelection.Height-conPrompt_BadgeSelection.Height-conNext_BadgeSelection.Height
            LayoutMinHeight: =75
            LayoutMinWidth: =250
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            RadiusBottomLeft: =24
            RadiusBottomRight: =24
            RadiusTopLeft: =24
            RadiusTopRight: =24
            Width: =Parent.Width*.96
            X: =Parent.Width*.02
            ZIndex: =4

            conInputSelection_BadgeSelection As groupContainer.verticalAutoLayoutContainer:
                Height: =Parent.Height
                LayoutAlignItems: =LayoutAlignItems.Stretch
                LayoutDirection: =LayoutDirection.Vertical
                LayoutMode: =LayoutMode.Auto
                Width: =Parent.Width
                ZIndex: =9

                conReceiverInfo_BadgeSelection As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    FillPortions: =0
                    Height: =60
                    LayoutMinHeight: =112
                    LayoutMinWidth: =250
                    ZIndex: =1

                    lblRecipientEmail_BadgeSelection As label:
                        AutoHeight: =true
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =ColorValue(varThemeColors.text)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =ColorValue(varThemeColors.primary)
                        FocusedBorderThickness: =4
                        Font: =varThemeFont.paragraph.face
                        FontWeight: =varThemeFont.paragraph.weight
                        Height: =Self.Size * 2.5 
                        Italic: =varThemeFont.paragraph.italic
                        PaddingBottom: =0
                        PaddingLeft: =10
                        PaddingTop: =
                        Size: =varThemeFont.paragraph.size
                        Text: =varNewSubmission.RecipientEmail
                        Tooltip: =Self.Text
                        Width: =Parent.Width *.85
                        X: =imgRecipient_BadgeSelection.X+imgRecipient_BadgeSelection.Width+5
                        Y: =lblRecipientName_BadgeSelection.Y+lblRecipientName_BadgeSelection.Height
                        ZIndex: =2

                    lblRecipientName_BadgeSelection As label:
                        BorderColor: =RGBA(0, 0, 0, 0)
                        BorderStyle: =BorderStyle.None
                        BorderThickness: =2
                        Color: =ColorValue(varThemeColors.text)
                        DisabledBorderColor: =RGBA(0, 0, 0, 0)
                        FocusedBorderColor: =ColorValue(varThemeColors.primary)
                        FocusedBorderThickness: =4
                        Font: =varThemeFont.paragraph.face
                        FontWeight: =varThemeFont.H2.weight
                        Height: =Self.Size * 2.5    
                        Italic: =varThemeFont.paragraph.italic
                        PaddingBottom: =0
                        PaddingLeft: =10
                        PaddingTop: =10
                        Role: =TextRole.Heading3
                        Size: =varThemeFont.paragraph.size
                        Text: =varNewSubmission.Recipient.DisplayName
                        Tooltip: =Self.Text
                        VerticalAlign: =VerticalAlign.Top
                        Width: =Parent.Width *.85
                        X: =imgRecipient_BadgeSelection.X+imgRecipient_BadgeSelection.Width+5
                        Y: =imgRecipient_BadgeSelection.Y-8
                        ZIndex: =3

                    imgRecipient_BadgeSelection As image:
                        AccessibleLabel: |-
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Recipient Photo"},
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                )
                            )
                        Height: =50
                        Image: |
                            =/*If(!IsBlank(varNewSubmission.RecipientEmail)&& Office365Users.UserPhotoMetadata(varNewSubmission.RecipientEmail).HasPhoto, Office365Users.UserPhotoV2(varNewSubmission.RecipientEmail), DefaultPFP)*/
                            If(!IsBlank(varNewSubmission.RecipientEmail)&& Office365Users.UserPhotoMetadata(varNewSubmission.RecipientEmail).HasPhoto, Office365Users.UserPhotoV2(varNewSubmission.RecipientEmail), DefaultPFP)
                        ImagePosition: =ImagePosition.Fill
                        RadiusBottomLeft: =100
                        RadiusBottomRight: =100
                        RadiusTopLeft: =100
                        RadiusTopRight: =100
                        Width: =Self.Height
                        X: =5
                        Y: =5
                        ZIndex: =4

                conBadgeGallery_BadgeSelection As groupContainer.manualLayoutContainer:
                    AlignInContainer: =AlignInContainer.SetByContainer
                    Height: =225
                    LayoutMinHeight: =112
                    LayoutMinWidth: =250
                    ZIndex: =2

                    "galBadgeGallery_BadgeSelection As gallery.'BrowseLayout_Vertical_TwoTextOneImageVariant_ver4.0'":
                        AccessibleLabel: |-
                            =// Define a variable named "Text" with the value "{value}"
                            With(
                                {Text: "Badge Gallery"},
                                // Check if a localized text exists for "Text" in the user's preferred language
                                If(
                                    // If the localized text is blank, return the default text
                                    IsBlank(
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    ),
                                    Text,
                                    // If a localized text is found, return that instead of the default text
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                )
                            )
                        DelayItemLoading: =true
                        FocusedBorderThickness: =1
                        Height: =Parent.Height
                        Items: =Sort(colBadges,'Sort Order',SortOrder.Ascending)
                        Layout: =Layout.Vertical
                        LoadingSpinner: =LoadingSpinner.Data
                        OnSelect: =
                        TemplatePadding: =9
                        TemplateSize: =165
                        Width: =620
                        WrapCount: =2
                        ZIndex: =1

                        cntBadgeBox_BadgeSelection As groupContainer.manualLayoutContainer:
                            BorderColor: =ColorValue(varThemeColors.primary)
                            BorderThickness: =If(ThisItem.IsSelected,4,0)
                            DropShadow: =DropShadow.Regular
                            Fill: =ColorValue(varThemeColors.backgroundFill)
                            Height: =Parent.TemplateHeight-10
                            RadiusBottomLeft: =24
                            RadiusBottomRight: =24
                            RadiusTopLeft: =24
                            RadiusTopRight: =24
                            Width: =Parent.TemplateWidth-9
                            ZIndex: =1

                        imgBadgeImageGallery_BadgeSelection As image:
                            BorderColor: =Color.White
                            BorderThickness: =3
                            Height: =60
                            Image: =ThisItem.'Badge Image'
                            OnSelect: =Select(Parent)
                            RadiusBottomLeft: =100
                            RadiusBottomRight: =100
                            RadiusTopLeft: =100
                            RadiusTopRight: =100
                            Width: =60
                            X: =12
                            Y: =(cntBadgeBox_BadgeSelection.Height/2)-(Self.Height/2)+((lblBadgeNameGallery_BadgeSelection.Height-lblBadgeNameGallery_BadgeSelection.Y)/2)
                            ZIndex: =3

                        lblBadgeNameGallery_BadgeSelection As label:
                            Color: =If(ThisItem.IsSelected,ColorValue(varThemeColors.text),ColorValue(varThemeColors.text))
                            Font: =Font.'Segoe UI'
                            FontWeight: =FontWeight.Bold
                            Height: =34
                            OnSelect: =Select(Parent)
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =16
                            Text: |-
                                =// Define a variable named "Text" with the value "{value}"
                                With(
                                    {Text: ThisItem.Name},
                                    // Check if a localized text exists for "Text" in the user's preferred language
                                    If(
                                        // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                        // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                )
                            VerticalAlign: =VerticalAlign.Top
                            Width: =272
                            X: =14
                            Y: =10
                            ZIndex: =4

                        lblBadgeSubTitleGallery_BadgeSelection As label:
                            Color: =If(ThisItem.IsSelected,ColorValue(varThemeColors.text),ColorValue(varThemeColors.text))
                            Font: =varThemeFont.paragraph.face
                            FontWeight: =varThemeFont.paragraph.weight
                            Height: =127
                            Italic: =varThemeFont.paragraph.italic
                            OnSelect: =Select(Parent)
                            PaddingBottom: =0
                            PaddingLeft: =0
                            PaddingRight: =0
                            PaddingTop: =0
                            Size: =varThemeFont.paragraph.size
                            Text: |-
                                =// Define a variable named "Text" with the value "{value}"
                                With(
                                    {Text: ThisItem.SubTitle},
                                    // Check if a localized text exists for "Text" in the user's preferred language
                                    If(
                                        // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                        // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                )
                            Width: =195
                            X: =82
                            Y: =24
                            ZIndex: =5

                        btnSelectBadgeGallery_BadgeSelection As button:
                            BorderColor: =RGBA(255, 255, 255, 0)
                            Color: =RGBA(255, 255, 255, 0)
                            DisabledBorderColor: =RGBA(255, 255, 255, 0)
                            DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                            DisabledFill: =RGBA(255, 255, 255, 0)
                            Fill: =RGBA(255, 255, 255, 0)
                            FocusedBorderColor: =RGBA(255, 255, 255, 0)
                            FocusedBorderThickness: =0
                            Height: =cntBadgeBox_BadgeSelection.Height
                            HoverBorderColor: =RGBA(255, 255, 255, 0)
                            HoverColor: =RGBA(255, 255, 255, 0)
                            HoverFill: =RGBA(255, 255, 255, 0)
                            OnSelect: =Select(Parent)
                            PressedBorderColor: =RGBA(255, 255, 255, 0)
                            PressedColor: =ColorValue(varThemeColors.primary)
                            PressedFill: =RGBA(255, 255, 255, 0)
                            RadiusBottomLeft: =0
                            RadiusBottomRight: =0
                            RadiusTopLeft: =0
                            RadiusTopRight: =0
                            Size: =24
                            Text: =""
                            Width: =cntBadgeBox_BadgeSelection.Width
                            ZIndex: =6

        conNext_BadgeSelection As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.Start
            FillPortions: =0
            Height: =60
            LayoutMinHeight: =60
            LayoutMinWidth: =Parent.Width
            Width: =Parent.Width
            ZIndex: =5

            btnSubmit_BadgeSelection As button:
                BorderColor: =ColorValue(varThemeColors.primary)
                BorderThickness: =1
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledColor: =ColorValue(varThemeColors.disabledText)
                DisabledFill: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisplayMode: =If(!IsBlank(galBadgeGallery_BadgeSelection.Selected), DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =ColorValue(varThemeColors.primary)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Font: =varThemeFont.button.face
                FontWeight: =varThemeFont.button.weight
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =ColorValue(varThemeColors.tertiary)
                Italic: =varThemeFont.button.italic
                OnSelect: |-
                    =//Add the badge selection to the conNewSubmission collection for this recipient
                    Patch(
                        colNewSubmission,
                        First(colNewSubmission),
                        {
                            SelectedBadge: galBadgeGallery_BadgeSelection.Selected
                        }
                    );
                    
                    Navigate('Message Screen');
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.altText)
                PressedFill: =ColorValue(varThemeColors.primary)
                RadiusBottomLeft: =4
                RadiusBottomRight: =4
                RadiusTopLeft: =4
                RadiusTopRight: =4
                Size: =varThemeFont.button.size
                Text: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Next"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Width: =150
                X: =455
                Y: =10
                ZIndex: =1

    conHeader_BadgeSelection As groupContainer.horizontalAutoLayoutContainer:
        Fill: =ColorValue(varThemeColors.primary)
        Height: =75
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: |-
            =Switch(App.ActiveScreen.Size,
            5, (Parent.Width - 1450)/2,
            4, 75,
            3, 50,
            2, 25,
            1, 10
            )
        PaddingRight: =Self.PaddingLeft
        Width: =Parent.Width
        ZIndex: =2

        conLeftHeaderContent_BadgeSelection As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =10
            Width: =100
            ZIndex: =1

            icoHeaderBack_BadgeSelection As icon.BackArrow:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Back"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.BackArrow
                OnSelect: =Back()
                PaddingBottom: =6
                PaddingLeft: =6
                PaddingRight: =6
                PaddingTop: =6
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Width: =60
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =1

        conCenterHeaderContent_BadgeSelection As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =50
            LayoutMinWidth: =50
            ZIndex: =2

            imgMicrosoftLogo_BadgeSelection As image:
                AccessibleLabel: ="Home"
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                Height: =Parent.Height
                Image: =varThemeColors.iconimg
                OnSelect: =Navigate('Main Page Screen')
                Width: =Self.Height * 2
                X: =(Parent.Width/2)-(Self.Width/2)
                ZIndex: =1

        conRightHeaderContent_BadgeSelection As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            Height: =Parent.Height
            LayoutMinHeight: =Parent.Height
            LayoutMinWidth: =50
            Width: =250
            ZIndex: =3

            imgCurrentUser_BadgeSelection As image:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Logged In User Photo"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Height: =50
                Image: =If(!IsBlank(User().Email)&& Office365Users.UserPhotoMetadata(User().Email).HasPhoto, Office365Users.UserPhotoV2(User().Email), DefaultPFP)
                RadiusBottomLeft: =50
                RadiusBottomRight: =50
                RadiusTopLeft: =50
                RadiusTopRight: =50
                Width: =50
                X: =Parent.Width-Self.Width
                Y: =12
                ZIndex: =4

            "icoSettings_BadgeSelection As icon.'3DPrinting'":
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Settings"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =ColorValue(varThemeColors.primary)
                Color: =ColorValue(varThemeColors.altText)
                DisabledBorderColor: =ColorValue(varThemeColors.disabledText)
                DisabledColor: =ColorValue(varThemeColors.backgroundFillDisabled)
                DisabledFill: =RGBA(0,0,0,0)
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =ColorValue(varThemeColors.info)
                FocusedBorderThickness: =4
                Height: =60
                HoverBorderColor: =ColorValue(varThemeColors.primary)
                HoverColor: =ColorValue(varThemeColors.altText)
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Settings
                OnSelect: =Navigate('Settings Screen')
                PaddingBottom: =8
                PaddingLeft: =8
                PaddingRight: =8
                PaddingTop: =8
                PressedBorderColor: =ColorValue(varThemeColors.primary)
                PressedColor: =ColorValue(varThemeColors.primary)
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: ="Settings"
                Width: =60
                X: =imgCurrentUser_BadgeSelection.X-Self.Width-10
                Y: =(Parent.Height/2)-(Self.Height/2)
                ZIndex: =5

