CommandBar As CanvasComponent:
    Fill: =RGBA(0, 0, 0, 0)
    Height: =44
    OnReset: =
    ResetCommandBar: =true
    Width: =1692
    X: =0
    Y: =0
    ZIndex: =1

    conCommandBar As groupContainer.horizontalAutoLayoutContainer:
        BorderColor: =
        Height: =CommandBar.Height-1
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: =24
        PaddingRight: =24
        Width: =CommandBar.Width
        ZIndex: =1

        conCommandBarButtons As groupContainer.horizontalAutoLayoutContainer:
            LayoutMinHeight: =0
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =1

            conCommandBarButtonsCreate As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =Len(btnCommandBarButtonsCreate.Text)*9+btnCommandBarButtonsCreate.PaddingLeft
                ZIndex: =1

                icoCommandBarButtonsCreate As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Create"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Add
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsCreate.Y+btnCommandBarButtonsCreate.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsCreate As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            false
                        );
                        Set(
                            varIsNew,
                            true
                        );
                        //Reset the cached data and controls to prepare for new purchase order details
                        Reset(txtPurchaseOrderDetailsVendor);
                        Reset(txtPurchaseOrderDetailsVendorName);
                        Reset(txtPurchaseOrderDetailsTotal);
                        Reset(cmbPurchaseOrderDetailsPurchasingOrg);
                        Reset(cmbPurchaseOrderDetailsPurchasingGroup);
                        Reset(cmbPurchaseOrderDetailsCurrency);
                        Reset(cmbPurchaseOrderDetailsLocation);
                        ClearCollect(
                            colPurchaseOrderItemsTemp,
                            colPurchaseOrderItems
                        );
                        Clear(colPurchaseOrderItems);
                        Set(
                            varNewVendorHeader,
                            Blank()
                        );
                        //Navigate back to Purchase Order Details screen if selecting to create from another screen
                        Navigate(
                            'Purchase Orders Details Screen',
                            ScreenTransition.None
                        )
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Create"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsEdit As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =And(
                        !IsBlank(varPurchaseOrderNumber),
                        !Or(
                            varIsEdit,
                            varIsNew
                        ),
                        IsBlank(varPurchaseOrderHeader.Released)
                    )
                Width: =Len(btnCommandBarButtonsEdit.Text)*9+btnCommandBarButtonsEdit.PaddingLeft
                X: =conCommandBarButtonsCreate.X+conCommandBarButtonsCreate.Width+10
                ZIndex: =2

                icoCommandBarButtonsEdit As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Edit"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Edit
                    OnSelect: =
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsEdit.Y+btnCommandBarButtonsEdit.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsEdit As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            true
                        );
                        Set(
                            varIsNew,
                            false
                        );
                        //Create temporary collections and cache in case the user cancels out the change action and needs to revert back to the last queried purchase order
                        ClearCollect(
                            colPurchaseOrderItemsTemp,
                            colPurchaseOrderItems
                        );
                        Set(
                            varNewVendorHeader,//Clear out any new vendor selected
                            Blank()
                        );
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Edit"},
                              If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsSave As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =Or(
                        varIsEdit,
                        varIsNew
                    )
                Width: =Len(btnCommandBarButtonsSave.Text)*10+btnCommandBarButtonsSave.PaddingLeft
                X: =1
                ZIndex: =3

                icoCommandBarButtonsSave As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Save"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Save
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsSave.Y+btnCommandBarButtonsSave.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsSave As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |
                        =//Reset controls
                        Set(
                            varResetSelectRows,
                            true
                        );
                        //work around to reset gallery select row checkbox and selected row highlighted
                        Set(
                            varResetSelectRows,
                            false
                        );
                        Reset(chbPurchaseOrderDetailsItemsSelectAll);
                        Reset(txtPurchaseOrderDetailsItemsFilter);
                        //Check to see if all required information is populated first and build a temporary collection of required fields missing
                        Clear(colRequiredFieldsTemp);
                        If(
                            Or(
                                IsBlank(txtPurchaseOrderDetailsVendor.Text),
                                txtPurchaseOrderDetailsVendor.Italic//Italicized means the vendor has not been "looked up" to confirm it exists first
                            ),
                            Collect(
                                colRequiredFieldsTemp,
                                lblPurchaseOrderDetailsVendor.Text
                            )
                        );
                        If(
                            IsBlank(cmbPurchaseOrderDetailsPurchasingOrg.Selected.'Value Code'),
                            Collect(
                                colRequiredFieldsTemp,
                                lblPurchaseOrderDetailsPurchasingOrg.Text
                            )
                        );
                        If(
                            IsBlank(cmbPurchaseOrderDetailsPurchasingGroup.Selected.'Value Code'),
                            Collect(
                                colRequiredFieldsTemp,
                                lblPurchaseOrderDetailsPurchasingGroup.Text
                            )
                        );
                        If(
                            IsEmpty(
                                Filter(
                                    colPurchaseOrderItems,
                                    CrudType <> "D"
                                )
                            ),
                            Collect(
                                colRequiredFieldsTemp,
                                lblPurchaseOrderDetailsItems.Text
                            )
                        );
                        //Check to see if required fields are populated and if not, notify which fields are missing
                        If(
                            !IsEmpty(colRequiredFieldsTemp),
                            Notify(
                                Substitute(
                                    With(
                                        {Text: "The following information is required before saving"},
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & ": " & Concat(
                                        colRequiredFieldsTemp,
                                        Value,
                                        ", "
                                    ),
                                    " *",
                                    ""
                                ),
                                NotificationType.Error,
                                0
                            );
                            ,
                        //Set processing variable to change processing control behavior
                            Set(
                                varIsProcessing,
                                true
                            );
                            Set(
                                varPurchaseOrderJSON,//Build the purchase order JSON
                                "{Header: " & JSON(
                                    {
                                        OrderNumber: varPurchaseOrderNumber,
                                        Vendor: Trim(txtPurchaseOrderDetailsVendor.Text),
                                        PurchasingOrganization: cmbPurchaseOrderDetailsPurchasingOrg.Selected.'Value Code',
                                        PurchasingGroup: cmbPurchaseOrderDetailsPurchasingGroup.Selected.'Value Code',
                                        Currency: cmbPurchaseOrderDetailsCurrency.Selected.'Value Code',
                                        HeaderText: Trim(txtPurchaseOrderDetailsHeaderText.Text)
                                    },
                                    JSONFormat.IndentFour
                                ) & ", Items: " & JSON(//Build the purchase order items JSON from cached collection
                                    colPurchaseOrderItems,
                                    JSONFormat.IndentFour
                                ) & "}"
                            );
                            
                        //Replace any nulls in JSON string with empty strings before calling the flows
                        Set(
                                varPurchaseOrderJSON,
                                Substitute(
                                    varPurchaseOrderJSON,
                                    "null",
                                    """"""
                                )
                            );
                            
                        //Call the corresponding Power Automate depending on whether user is creating or updating a purchase order
                        If(
                                varIsNew,//Create purchase order
                                Set(
                                    varPurchaseOrderReturn,
                                    CreatePurchaseOrder.Run(varPurchaseOrderJSON)
                                );
                                ,//Else update purchase order
                                Set(
                                    varPurchaseOrderReturn,
                                    UpdatePurchaseOrder.Run(varPurchaseOrderJSON)
                                );
                            );
                            
                        //Set processing back to false
                        Set(
                                varIsProcessing,
                                false
                            );
                            
                        //Assess and raise any error messages and process further upon success
                        Switch(
                                varPurchaseOrderReturn.Status,
                                "Error",//Raise error messages leaving variables in existing state for user to try again
                                Notify(
                                    Concat(
                                        varPurchaseOrderReturn.Messages,
                                        Message,
                                        " "
                                    ),
                                    NotificationType.Error,
                                    0
                                ),
                                "Success",//Raise success message
                                Notify(
                                    With(
                                        {
                                            Text: If(
                                                varIsNew,
                                                "Purchase order successfully created",
                                                "Purchase order successfully updated"
                                            )
                                        },
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & " - " & varPurchaseOrderReturn.OrderNumber,
                                    NotificationType.Success
                                );
                                Set(
                                    varSelectedPurchaseOrderID,//Set selected purchase order id so that the newly created purchase order can be refreshed at the end of the logic
                                    varPurchaseOrderReturn.OrderNumber
                                );
                                Select(icoCommandBarSearchExecute);
                            //Query the latest SAP purchase order record again to ensure any system generated data is returned
                        Set(
                                    varIsEdit,//Reset variable to not edit
                                    false
                                );
                                Set(
                                    varIsNew,//Reset variable to not be new purchase order record
                                    false
                                ),//Default to raise any information messages
                                Notify(
                                    Concat(
                                        varPurchaseOrderReturn.Messages,
                                        Message,
                                        " "
                                    ),
                                    NotificationType.Information
                                );
                            );
                            Set(
                                varPurchaseOrderReturn,//Done with purchase order return variable, clear the cache
                                Blank()
                            )
                        );
                        //Set processing back to false
                        Set(
                            varIsProcessing,
                            false
                        );
                        //No longer need required field temp data
                        Clear(colRequiredFieldsTemp);
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Save"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsCancel As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =Or(
                        varIsEdit,
                        varIsNew
                    )
                Width: =Len(btnCommandBarButtonsCancel.Text)*9+btnCommandBarButtonsCancel.PaddingLeft
                X: =conCommandBarButtonsSave.X+conCommandBarButtonsSave.Width+10
                ZIndex: =4

                icoCommandBarButtonsCancel As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Cancel"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Cancel
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsCancel.Y+btnCommandBarButtonsCancel.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsCancel As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |+
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            false
                        );
                        Set(
                            varIsNew,
                            false
                        );
                        //work around to reset gallery select row checkbox and selected row highlighted
                        Set(
                            varResetSelectRows,
                            true
                        );
                        Set(
                            varResetSelectRows,
                            false
                        );
                        //Reset all the input controls to remove entered data and revert back to cached data
                        Reset(chbPurchaseOrderDetailsItemsSelectAll);
                        Reset(txtPurchaseOrderDetailsItemsFilter);
                        Reset(txtPurchaseOrderDetailsHeaderText);
                        Reset(cmbPurchaseOrderDetailsCurrency);
                        Reset(cmbPurchaseOrderDetailsPurchasingGroup);
                        Reset(cmbPurchaseOrderDetailsPurchasingOrg);
                        Reset(txtPurchaseOrderDetailsVendor);
                        Reset(cmbPurchaseOrderDetailsLocation);
                        Set(
                            varNewVendorHeader,//set any selected vendor back to blank
                            Blank()
                        );
                        ClearCollect(
                            colPurchaseOrderItems,
                            colPurchaseOrderItemsTemp
                        );
                        
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Cancel"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsApprove As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =And(
                        IsBlank(varPurchaseOrderHeader.Released),
                        !IsBlank(varPurchaseOrderHeader),
                        !varIsEdit,
                        !varIsNew
                    )
                Width: =Len(btnCommandBarButtonsApprove.Text)*9+btnCommandBarButtonsApprove.PaddingLeft
                X: =conCommandBarButtonsEdit.X+conCommandBarButtonsEdit.Width+10
                ZIndex: =5

                icoCommandBarButtonsApprove As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Change"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.ThumbsUp
                    OnSelect: =
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsApprove.Y+btnCommandBarButtonsApprove.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsApprove As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |
                        =//Start processing
                        Set(
                            varIsProcessing,
                            true
                        );
                        //Invoke ApprovePurchaseOrder flow and store the response in a collection
                        ClearCollect(
                            colApprovalResponse,
                            ApprovePurchaseOrder.Run(varPurchaseOrderNumber)
                        );
                        If (
                            First(colApprovalResponse).Status = "Success",
                            Notify(
                                // Define a variable named "Text" with the value "{value}"
                                With(
                                    {Text: "Purchase order was successfully approved"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                                    If(
                                // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Success,
                                7000
                            );
                            //Store the returned Order Number in a variable that is used to refresh the lastest data from SAP for the PO
                            Set(
                                varSelectedPurchaseOrderID,
                                First(colApprovalResponse).OrderNumber
                            );
                            Set(varIsProcessing,false);
                            Select(icoCommandBarSearchExecute); //Execute the logic to refresh PO data from SAP
                            Set(
                                varIsEdit,
                                false
                            );
                            Set(
                                varIsNew,
                                false
                            )
                            ,
                            //Error response, notify appropriately
                            Notify(
                                Concat(
                                    First(colApprovalResponse).Messages,
                                    Message,
                                    " "
                                ),
                                NotificationType.Error,
                                0
                            )
                        );
                        //Done processing
                        Set(
                            varIsProcessing,
                            false
                        );
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Approve"},
                              If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsGoodsReceipt As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =And(
                        varPurchaseOrderHeader.Released = "X",
                        !varIsEdit,
                        !varIsNew,
                        !IsEmpty(
                            Filter(
                                colPurchaseOrderItems,
                                IsBlank(_GoodsReceipt)
                            )
                        )
                    )
                Width: =Len(btnCommandBarButtonsGoodsReceipt.Text)*9+btnCommandBarButtonsGoodsReceipt.PaddingLeft
                X: =conCommandBarButtonsEdit.X+conCommandBarButtonsEdit.Width+10
                ZIndex: =6

                icoCommandBarButtonsGoodsReceipt As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Goods receipt"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Journal
                    OnSelect: =
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsGoodsReceipt.Y+btnCommandBarButtonsGoodsReceipt.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsGoodsReceipt As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Collection that tracks cross screen navigation thread and allows to back out in reverse sequence
                        ClearCollect(
                            colAppNavigationThreads,
                            Table(
                                {
                                    Screen: App.ActiveScreen,
                                    Order: CountRows(colAppNavigationThreads) + 1
                                }
                            );
                            
                        );
                        //Navigate to purchase order goods receipt screen
                        Navigate(
                            'Purchase Order Goods Receipt Screen',
                            ScreenTransition.Cover
                        );
                        ClearCollect(
                            colGoodsReceiptItems,
                            Filter(
                                colPurchaseOrderItems,
                                IsBlank(_GoodsReceipt)
                            )
                        );
                        //Default all the CrudType values to create
                        UpdateIf(
                            colGoodsReceiptItems,
                            true,
                            {CrudType: "C"}
                        )
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Goods receipt"},
                              If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

        conCommandBarSearch As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            FillPortions: =0
            Height: =Parent.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =Self.Width
            Width: |
                =imgCommandBarSearchExecuting.X + imgCommandBarSearchExecuting.Width + 1
            ZIndex: =4

            "icoCommandBarRefreshScreen As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Reload
                OnSelect: |
                    =//Refresh the core object data and navigate back to the default screen
                    Navigate('Purchase Orders Details Screen');
                    Set(varSelectedPurchaseOrderID,varPurchaseOrderNumber);
                    Select(icoCommandBarSearchExecute)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Advanced search"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: |-
                    =!Or(
                        varIsEdit,
                        varIsNew,
                        varIsProcessing,
                        IsBlank(varPurchaseOrderHeader)
                    )
                Width: =30
                X: =imgCommandBarSearchExecuting.X
                Y: =6
                ZIndex: =1

            imgCommandBarSearchExecuting As image:
                Height: =30
                Image: ='loading-grey'
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =varIsProcessing
                Width: =30
                X: =icoCommandBarAdvancedSearch.X+icoCommandBarAdvancedSearch.Width+7
                Y: =6
                ZIndex: =2

            "icoCommandBarAdvancedSearch As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.FilterFlat
                OnSelect: |
                    =//Use a function like this to navigate the user to a search all screen containing the search component
                    ClearCollect(
                        colAppNavigationThreads,
                        Table(
                            {
                                Screen: App.ActiveScreen,
                                Order: CountRows(colAppNavigationThreads) + 1
                            }
                        )
                    );
                    //Navigate to the requisition search screen resetting all the seach controls (workaround)
                    Set(
                        varResetPurchaseOrdersSearch,
                        true
                    );
                    Navigate(
                        'Purchase Order Search Screen',
                        ScreenTransition.Cover
                    );
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Advanced search"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width+10
                Y: =6
                ZIndex: =3

            txtCommandBarSearchInput As text:
                AccessibleLabel: =Self.HintText
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                Color: =varThemeColors.text
                Default: =If(CommandBar.ResetCommandBar,"")
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderColor: =varThemeColors.tertiaryGray
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Format: =TextFormat.Number
                Height: =30
                HintText: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Search purchase order number"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                HoverBorderColor: =varThemeColors.tertiaryGray
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.backgroundFill
                OnChange: |-
                    =Set(
                        varSelectedPurchaseOrderID,
                        Trim(Self.Text)
                    )
                PaddingRight: =icoCommandBarSearchExecute.Width
                PressedBorderColor: =varThemeColors.tertiaryGray
                PressedColor: =varThemeColors.text
                PressedFill: =varThemeColors.backgroundFill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Text,
                        Self.HintText
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: |-
                    =Max(
                        125,
                        Len(Self.HintText) * 10
                    )
                X: =cmbCommandBarRecentSearch.X+cmbCommandBarRecentSearch.Width+10
                Y: =6
                ZIndex: =4

            "icoCommandBarSearchExecute As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primaryGray
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.backgroundFillDisabled
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.ArrowRight
                OnSelect: |-
                    =If(
                        !IsBlank(varSelectedPurchaseOrderID),
                    //Sets processing indicator control behavior 
                        Set(
                            varIsProcessing,
                            true
                        );
                        Set(
                            varFooterMessage,
                            "Loading"
                        );
                        //Remove any existing cached purchase data whether variables or collections
                    Set(
                            varPurchaseOrderHeader,
                            Blank()
                        );
                        Clear(colPurchaseOrderItems);
                        
                    //Call ReadPurchaseOrder Power Automate to read the purchase order from SAP
                    ClearCollect(
                            colReadPurchaseOrderResponseTemp,//collection that temporarily stores the purchase order response data
                            ReadPurchaseOrder.Run(varSelectedPurchaseOrderID)
                        );
                        
                    //Evalute response conditions
                    Switch(
                            true,
                            And(//Check to see if read purchase order call was successful and process happy path logic
                                First(colReadPurchaseOrderResponseTemp).Status = "Success",
                                !IsBlank(First(colReadPurchaseOrderResponseTemp).OrderNumber)
                            ),
                            //Reset the search text input control
                            Reset(txtCommandBarSearchInput);
                            Set(
                                varPurchaseOrderNumber,//Variable that stores the returned purchase order number
                                First(colReadPurchaseOrderResponseTemp).OrderNumber
                            );
                            Set(
                                varPurchaseOrderHeader,//Variable that stores the returned main purchase order data
                                First(colReadPurchaseOrderResponseTemp).Header
                            );
                            Set(//Set default sort column of items table
                                varPurchaseOrderItemsSortByColumn,
                                btnPurchaseOrderItemsTableHeaderItem.Text
                            );
                            Set(//Set default sort order of items table
                                varPurchaseOrderItemsSortOrder,
                                SortOrder.Ascending
                            );
                            //Reset any controls that interact with existing purchase order data
                    Reset(chbPurchaseOrderDetailsItemsSelectAll);
                            Reset(galPurchaseOrderItems);
                            Reset(txtPurchaseOrderDetailsItemsFilter);
                         /*Cache associated purchase order child records. Collections are used to pass updated data back in update purchase order transactions
                        Default CrudType fields to 'R'. CrudType will be changed if user changes/removes child records and used by update purchase order flow*/
                    UpdateIf(
                                ClearCollect(
                                    colPurchaseOrderItems,//Collection that caches associated purchase order items
                                    AddColumns(
                                        First(colReadPurchaseOrderResponseTemp).Items,
                                        "_Invoice",
                                        LookUp(
                                            First(colReadPurchaseOrderResponseTemp).Invoices As tempCol1,
                                            ItemNumber = tempCol1.ItemNumber
                                        ).Document,
                                        "_GoodsReceipt",
                                        LookUp(
                                            First(colReadPurchaseOrderResponseTemp).GoodsReceipts As tempCol1,
                                            ItemNumber = tempCol1.ItemNumber
                                        ).Document,
                                        "_Payment",
                                        LookUp(
                                            First(colReadPurchaseOrderResponseTemp).Payments As tempCol1,
                                            ItemNumber = tempCol1.ItemNumber
                                        ).Payment
                                    )
                                );
                                ,
                                true,
                                {CrudType: "R"}
                            );
                            //Create/update purchase order search history record
                    Patch(
                                'SAP Search Histories',
                                Coalesce(
                                    LookUp(
                                        'SAP Search Histories',
                                        And(
                                            'Object ID' = varPurchaseOrderNumber,
                                            'Object Type' = 'Object Type (SAP Search Histories)'.'Purchase Order',
                                            'Created By'.User = varSystemUserID
                                        )
                                    ),
                                    Defaults('SAP Search Histories')
                                ),
                                {
                                    'Object ID': varPurchaseOrderNumber,
                                    'Object Type': 'Object Type (SAP Search Histories)'.'Purchase Order',
                                    Name: Concatenate(
                                        varPurchaseOrderNumber,
                                        " - ",
                                        varPurchaseOrderHeader.VendorName
                                    ),
                                    'Last Searched On': Now()
                                }
                            );
                        //Check if the patch function was successful and notify if there was any errors.
                    If(
                                !IsEmpty(Errors('SAP Search Histories')),
                                Notify(
                                    First(Errors('SAP Search Histories')).Message,
                                    NotificationType.Error,
                                    0
                                ),
                                Reset(cmbCommandBarRecentSearch);
                                Refresh('SAP Search Histories');
                            );
                        //End if ReadPurchaseOrder Power Automate call was success
                    ,
                            And(//Flow returned and error
                                First(colReadPurchaseOrderResponseTemp).Status = "Error",
                                IsBlank(First(colReadPurchaseOrderResponseTemp).Header.Vendor)
                            ),
                            Notify(
                                Concat(
                                    First(colReadPurchaseOrderResponseTemp).Messages,
                                    Message,
                                    " "
                                ),
                                NotificationType.Error,
                                0
                            ),
                            And(//Check to see if call was successful, but no purchase order was found
                                First(colReadPurchaseOrderResponseTemp).Status = "Information",
                                IsBlank(First(colReadPurchaseOrderResponseTemp).OrderNumber)
                            ),
                            Notify(
                                With(
                                    {Text: "Purchase order not found"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Information,
                                7000
                            ),//Default response for an unhandled error return
                            Notify(
                                With(
                                    {Text: "Unexpected error occurred"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Error,
                                0
                            )
                        );
                        
                    //End purchase order response switch statement
                    //Reset loading to false as the data query is complete
                    Set(
                            varSelectedPurchaseOrderID,//done with selected purchase order ID variable, set back to blank
                            Blank()
                        );
                        Clear(colReadPurchaseOrderResponseTemp);
                        
                    //done with read purchase order temp collections, clear cache
                    Set(
                            varIsProcessing,//done processing read purchase order, set variable back to false stopping any processing control behavior
                            false
                        );
                        Set(
                            varFooterMessage,
                            Blank()
                        );
                        
                    )
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =With(
                        {Text: "Execute search"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: =!Or(varIsEdit,varIsNew) && !IsBlank(txtCommandBarSearchInput.Text)
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width-Self.Width
                Y: =6
                ZIndex: =5

            cmbCommandBarRecentSearch As combobox:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: If(
                                IsEmpty(
                                    (Filter(
                                        'SAP Search Histories',
                                        'Object Type' = 'Object Type (SAP Search Histories)'.'Purchase Order',
                                        'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                                    ))
                                ),
                                "No recent purchase orders",
                                "Select recent purchase order"
                            )
                        },
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                ChevronBackground: =varThemeColors.backgroundFill
                ChevronDisabledBackground: =varThemeColors.backgroundFillDisabled
                ChevronDisabledFill: |
                    =varThemeColors.text
                ChevronFill: =varThemeColors.text
                ChevronHoverBackground: =varThemeColors.secondaryGray
                ChevronHoverFill: |
                    =varThemeColors.text
                Color: =varThemeColors.text
                DefaultSelectedItems: =Blank()
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayFields: =["mpa_name","mpa_name"]
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderColor: =varThemeColors.tertiaryGray
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =varThemeColors.tertiaryGray
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.secondaryGray
                InputTextPlaceholder: =Self.AccessibleLabel
                Items: |-
                    =//Filter the 'SAP Search Histories' dataverse entity based upon the 'Object Type' value that you will to filter/display in the combo box.
                    Sort(
                        Filter(
                            'SAP Search Histories',
                            'Object Type' = 'Object Type (SAP Search Histories)'.'Purchase Order',
                            'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                        ),
                        'Last Searched On',
                        SortOrder.Descending
                    )
                NoSelectionText: =Self.AccessibleLabel
                OnChange: |-
                    =//When user selects new recent value and not blank, invoke the same command bar search logic as if the user manually entered the purchase order value
                    Reset(txtCommandBarSearchInput);
                    If(
                        And(
                            !IsBlank(Self.Selected),
                            Or(
                                Self.Selected.'Object ID' <> varSelectedPurchaseOrderID,
                                IsBlank(varSelectedPurchaseOrderID)
                            )
                        ),
                        Set(
                            varSelectedPurchaseOrderID,
                            Self.Selected.'Object ID'
                        );
                        Select(icoCommandBarSearchExecute);
                        
                    )
                PaddingLeft: =12
                PaddingRight: =10
                PressedBorderColor: =varThemeColors.tertiaryGray
                PressedColor: =varThemeColors.altText
                PressedFill: =varThemeColors.backgroundFill
                SearchFields: =["mpa_name","mpa_objectid"]
                SearchItems: |-
                    =Search(//Filter the 'SAP Search Histories' dataverse entity based upon the 'Object Type' value that you will to filter/display in the combo box.
                    Sort(
                        Filter(
                            'SAP Search Histories',
                            'Object Type' = 'Object Type (SAP Search Histories)'.'Purchase Order',
                            'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                        ),
                        'Last Searched On',
                        SortOrder.Descending
                    ),cmbCommandBarRecentSearch.SearchText,"mpa_name","mpa_objectid")
                SelectionColor: =varThemeColors.altText
                SelectionFill: =varThemeColors.primaryGray
                SelectionTagColor: =varThemeColors.text
                SelectionTagFill: =varThemeColors.backgroundFill
                SelectMultiple: =false
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Selected.Name,
                        Self.AccessibleLabel
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: |-
                    =Max(
                        250,
                        Len(Self.AccessibleLabel) * 10
                    )
                X: =shpCommandBarSearchDivider.X+shpCommandBarSearchDivider.Width+10
                Y: =6
                ZIndex: =6

            shpCommandBarSearchDivider As rectangle:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: "Divider"
                        },
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Fill: =varThemeColors.secondaryGray
                Height: =30
                OnSelect: =
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =2
                Y: =6
                ZIndex: =7

