CommandBar As CanvasComponent:
    Fill: =RGBA(0, 0, 0, 0)
    Height: =44
    OnReset: =
    ResetCommandBar: =true
    Width: =1692
    X: =0
    Y: =0
    ZIndex: =1

    conCommandBar As groupContainer.horizontalAutoLayoutContainer:
        BorderColor: =
        Height: =CommandBar.Height-1
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: =24
        PaddingRight: =24
        Width: =CommandBar.Width
        ZIndex: =1

        conCommandBarButtons As groupContainer.horizontalAutoLayoutContainer:
            LayoutMinHeight: =0
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            PaddingLeft: =2
            PaddingRight: =2
            ZIndex: =1

            conCommandBarButtonsCreate As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =Len(btnCommandBarButtonsCreate.Text)*9+btnCommandBarButtonsCreate.PaddingLeft
                ZIndex: =1

                icoCommandBarButtonsCreate As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Create"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Add
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsCreate.Y+btnCommandBarButtonsCreate.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsCreate As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            false
                        );
                        Set(
                            varIsNew,
                            true
                        );
                        //Reset the cached data and controls to prepare for new requisition details
                        Reset(txtRequisitionDetailsVendor);
                        Reset(txtRequisitionDetailsVendorName);
                        Reset(txtRequisitionDetailsTotal);
                        Reset(cmbRequisitionDetailsPurchasingOrg);
                        Reset(cmbRequisitionDetailsPurchasingGroup);
                        Reset(cmbRequisitionDetailsCurrency);
                        Reset(cmbRequisitionDetailsLocation);
                        ClearCollect(
                            colRequisitionItemsTemp,
                            colRequisitionItems
                        );
                        Clear(colRequisitionItems);
                        Set(
                            varNewVendorHeader,
                            Blank()
                        );
                        //Navigate back to Requisition Details screen if selecting to create from another screen
                        Navigate(
                            'Requisition Details Screen',
                            ScreenTransition.None
                        )
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Create"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsEdit As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =And(
                        !IsBlank(varRequisition),
                        !varIsEdit,
                        !varIsNew,
                        IsEmpty(
                            Filter(
                                colRequisitionItems,
                                !IsBlank(PurchaseOrderNumber)
                            )
                        )
                    )
                Width: =Len(btnCommandBarButtonsEdit.Text)*9+btnCommandBarButtonsEdit.PaddingLeft
                X: =conCommandBarButtonsCreate.X+conCommandBarButtonsCreate.Width+10
                ZIndex: =2

                icoCommandBarButtonsEdit As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Edit"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Edit
                    OnSelect: =
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsEdit.Y+btnCommandBarButtonsEdit.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsEdit As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            true
                        );
                        Set(
                            varIsNew,
                            false
                        );
                        //Create temporary collections and cache in case the user cancels out the change action and needs to revert back to the last queried requisition
                        ClearCollect(
                            colRequisitionItemsTemp,
                            colRequisitionItems
                        );
                        Set(
                            varNewVendorHeader,//Clear out any new vendor selected
                            Blank()
                        );
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Edit"},
                              If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsSave As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =Or(
                        varIsEdit,
                        varIsNew
                    )
                Width: =Len(btnCommandBarButtonsSave.Text)*10+btnCommandBarButtonsSave.PaddingLeft
                X: =1
                ZIndex: =3

                icoCommandBarButtonsSave As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Save"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Save
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsSave.Y+btnCommandBarButtonsSave.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsSave As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |
                        =//Reset controls, toggle reset select row variables as a work around to not being able to reset controls within galleries
                        Set(
                            varResetSelectRows,
                            true
                        );
                        Set(
                            varResetSelectRows,
                            false
                        );
                        Reset(chbRequisitionsDetailsItemsSelectAll);
                        Reset(txtRequisitionDetailsItemsFilter);
                        //Check to see if all required information is populated first and build a temporary collection of required fields missing
                        Clear(colRequiredFieldsTemp);
                        If(
                            Or(
                                IsBlank(txtRequisitionDetailsVendor.Text),
                                txtRequisitionDetailsVendor.Italic//Italicized means the vendor has not been "looked up" to confirm it exists first
                            ),
                            Collect(
                                colRequiredFieldsTemp,
                                lblRequisitionDetailsVendor.Text
                            )
                        );
                        If(
                            IsBlank(cmbRequisitionDetailsPurchasingOrg.Selected.'Value Code'),
                            Collect(
                                colRequiredFieldsTemp,
                                lblRequisitionDetailsPurchasingOrg.Text
                            )
                        );
                        If(
                            IsBlank(cmbRequisitionDetailsPurchasingGroup.Selected.'Value Code'),
                            Collect(
                                colRequiredFieldsTemp,
                                lblRequisitionDetailsPurchasingGroup.Text
                            )
                        );
                        If(
                            IsEmpty(
                                Filter(
                                    colRequisitionItems,
                                    CrudType <> "D"
                                )
                            ),
                            Collect(
                                colRequiredFieldsTemp,
                                lblRequisitionDetailsItems.Text
                            )
                        );
                        //Check to see if required fields are populated and if not, notify which fields are missing
                        If(
                            !IsEmpty(colRequiredFieldsTemp),
                            Notify(
                                Substitute(
                                    With(
                                        {Text: "The following information is required before saving"},
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & ": " & Concat(
                                        colRequiredFieldsTemp,
                                        Value,
                                        ", "
                                    ),
                                    " *",
                                    ""
                                ),
                                NotificationType.Error,
                                0
                            );
                            ,
                        //Set processing variable to change processing control behavior
                            Set(
                                varIsProcessing,
                                true
                            );
                            Reset(chbRequisitionsDetailsItemsSelectAll);
                            Reset(txtRequisitionDetailsItemsFilter);
                            Set(
                                varRequisitionJSON,//Build the requisition JSON
                                "{Header: " & JSON(//Build the requisition header JSON
                                    {
                                        PurchaseRequisitionNumber: varRequisition,
                                        Vendor: Trim(txtRequisitionDetailsVendor.Text),
                                        PurchasingOrganization: cmbRequisitionDetailsPurchasingOrg.Selected.'Value Code',
                                        PurchasingGroup: cmbRequisitionDetailsPurchasingGroup.Selected.'Value Code',
                                        Currency: cmbRequisitionDetailsCurrency.Selected.'Value Code',
                                        ReleaseDate: Text(
                                            Now(),
                                            "yyyy-mm-dd",
                                            "en-US"
                                        )
                                    },
                                    JSONFormat.IndentFour
                                ) & ", items: " & JSON(//Build the requisition items JSON from cached collection
                                    colRequisitionItems,
                                    JSONFormat.IndentFour
                                ) & "}"
                            );
                            
                        //Replace any nulls in JSON string with empty strings before calling the flows
                        Set(
                                varRequisitionJSON,
                                Substitute(
                                    varRequisitionJSON,
                                    "null",
                                    """"""
                                )
                            );
                            
                        //Call the corresponding Power Automate depending on whether user is creating or updating a requisition
                        If(
                                varIsNew,//Create requisition
                                Set(
                                    varRequisitionReturn,
                                    CreateRequisition.Run(varRequisitionJSON)
                                );
                                ,
                                Set(
                                    varRequisitionReturn,
                                    UpdateRequisition.Run(varRequisitionJSON)
                                );
                            );
                            
                        //Assess and raise any error messages and process further upon success
                        Switch(
                                varRequisitionReturn.Status,
                                "Error",//Raise error messages leaving variables in existing state for user to try again
                                Notify(
                                    Concat(
                                        varRequisitionReturn.Messages,
                                        Message,
                                        " "
                                    ),
                                    NotificationType.Error,
                                    0
                                ),
                                "Success",//Raise success message
                                Notify(
                                    With(
                                        {
                                            Text: If(
                                                varIsNew,
                                                "Requisition successfully created",
                                                "Requisition successfully updated"
                                            )
                                        },
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & " - " & varRequisitionReturn.PurchaseRequisitionNumber,
                                    NotificationType.Success
                                );
                                //Set processing back to false
                        Set(
                                    varIsProcessing,
                                    false
                                );
                                Set(
                                    varSelectedRequisitionID,//Set selected requisition id so that the newly created requisition can be refreshed at the end of the logic
                                    varRequisitionReturn.PurchaseRequisitionNumber
                                );
                                Select(icoCommandBarSearchExecute);
                            //Query the latest SAP requisition record again to ensure any system generated data is returned
                        Set(
                                    varIsEdit,//Reset variable to not edit
                                    false
                                );
                                Set(
                                    varIsNew,//Reset variable to not be new requisition record
                                    false
                                ),//Default to raise any information messages
                                Notify(
                                    Concat(
                                        varRequisitionReturn.Messages,
                                        Message,
                                        " "
                                    ),
                                    NotificationType.Information
                                );
                            );
                            Set(
                                varRequisitionReturn,//Done with requisition return variable, clear the cache
                                Blank()
                            )
                        );
                        //Set processing back to false
                        Set(
                            varIsProcessing,
                            false
                        );
                        //No longer need required field temp data
                        Clear(colRequiredFieldsTemp);
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Save"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsCancel As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =Or(
                        varIsEdit,
                        varIsNew
                    )
                Width: =Len(btnCommandBarButtonsCancel.Text)*9+btnCommandBarButtonsCancel.PaddingLeft
                X: =conCommandBarButtonsSave.X+conCommandBarButtonsSave.Width+10
                ZIndex: =4

                icoCommandBarButtonsCancel As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Cancel"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Cancel
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsCancel.Y+btnCommandBarButtonsCancel.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsCancel As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            false
                        );
                        Set(
                            varIsNew,
                            false
                        );
                        //work around to reset gallery select row checkbox and selected row highlighted
                        Set(
                            varResetSelectRows,
                            true
                        );
                        Set(
                            varResetSelectRows,
                            false
                        );
                        //Reset all the input controls to remove entered data and revert back to cached data
                        Reset(chbRequisitionsDetailsItemsSelectAll);
                        Reset(txtRequisitionDetailsVendor);
                        Reset(galRequisitionItems);
                        Reset(cmbRequisitionDetailsPurchasingOrg);
                        Reset(cmbRequisitionDetailsPurchasingGroup);
                        Reset(cmbRequisitionDetailsCurrency);
                        Reset(cmbRequisitionDetailsLocation);
                        Set(
                            varNewVendorHeader,//set any selected vendor back to blank
                            Blank()
                        );
                        ClearCollect(
                            colRequisitionItems,
                            colRequisitionItemsTemp
                        );
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Cancel"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsConvert As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =And(
                        !IsBlank(varRequisition),
                        !IsEmpty(
                            Filter(
                                colRequisitionItems,
                                IsBlank(PurchaseOrderNumber)
                            )
                        ),
                        !varIsNew,
                        !varIsEdit
                    )
                Width: =Len(btnCommandBarButtonsConvert.Text)*8+btnCommandBarButtonsConvert.PaddingLeft
                X: =conCommandBarButtonsEdit.X+conCommandBarButtonsEdit.Width+10
                ZIndex: =5

                icoCommandBarButtonsConvert As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Convert to purchase order"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.ArrowRight
                    OnSelect: =
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsConvert.Y+btnCommandBarButtonsConvert.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsConvert As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |
                        =//Start processing
                        Set(
                            varIsProcessing,
                            true
                        );
                        Set(
                            varPurchaseOrderJSON,//Build the purchase order JSON
                            "{Header: " & JSON(
                                {
                                    PurchaseRequisitionNumber: varRequisition,
                                    PurchasingOrganization: cmbRequisitionDetailsPurchasingOrg.Selected.'Value Code',
                                    PurchasingGroup: cmbRequisitionDetailsPurchasingGroup.Selected.'Value Code',
                                    Currency: cmbRequisitionDetailsCurrency.Selected.'Value Code',
                                    Vendor: Trim(txtRequisitionDetailsVendor.Text)
                                },
                                JSONFormat.IndentFour
                            ) & ", Items: " & JSON(//Build the purchase order items JSON from cached collection
                                colRequisitionItems,
                                JSONFormat.IndentFour
                            ) & "}"
                        );
                        //Replace any nulls in JSON string with empty strings before calling the flows
                        Set(
                            varPurchaseOrderJSON,
                            Substitute(
                                varPurchaseOrderJSON,
                                "null",
                                """"""
                            )
                        );
                        //Invoke ConvertRequisitionToPurchaseOrder flow and store the response in a collection
                        ClearCollect(
                            colConvertResponseTemp,
                            ConvertRequisitionToPurchaseOrder.Run(varPurchaseOrderJSON)
                        );
                        If (
                            First(colConvertResponseTemp).Status = "Success",
                            Notify(
                                // Define a variable named "Text" with the value "{value}"
                                With(
                                    {Text: "Requisition was successfully converted to purchase order"},
                            // Check if a localized text exists for "Text" in the user's preferred language
                                    If(
                                // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                                // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ) & " " & First(colConvertResponseTemp).OrderNumber,
                                NotificationType.Success,
                                7000
                            );
                            //Store the Requisition Number in a variable that is used to refresh the lastest data from SAP for the PO
                        Set(
                                varSelectedRequisitionID,
                                varRequisition
                            );
                            Set(
                                varIsProcessing,
                                false
                            );
                            Select(icoCommandBarSearchExecute);
                            //Execute the logic to refresh requisition data from SAP  
                        Set(
                                varIsEdit,
                                false
                            );
                            Set(
                                varIsNew,
                                false
                            );
                            ,
                            //Error response, notify appropriately
                            Notify(
                                Concat(
                                    First(colConvertResponseTemp).Messages,
                                    Message,
                                    " "
                                ),
                                NotificationType.Error,
                                0
                            )
                        );
                        //Done processing
                        Set(
                            varIsProcessing,
                            false
                        );
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Convert to purchase order"},
                              If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

        conCommandBarSearch As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            FillPortions: =0
            Height: =Parent.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =Self.Width
            Width: |
                =imgCommandBarSearchExecuting.X + imgCommandBarSearchExecuting.Width + 1
            ZIndex: =4

            "icoCommandBarRefreshScreen As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Reload
                OnSelect: |
                    =//Refresh the core object data and navigate back to the default screen
                    Navigate('Requisition Details Screen');
                    Set(varSelectedRequisitionID,varRequisition);
                    Select(icoCommandBarSearchExecute)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Refresh"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: |-
                    =!Or(
                        varIsEdit,
                        varIsNew,
                        varIsProcessing,
                        IsBlank(varRequisition)
                    )
                Width: =30
                X: =imgCommandBarSearchExecuting.X
                Y: =6
                ZIndex: =1

            imgCommandBarSearchExecuting As image:
                Height: =30
                Image: ='loading-grey'
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =varIsProcessing
                Width: =30
                X: =icoCommandBarAdvancedSearch.X+icoCommandBarAdvancedSearch.Width+7
                Y: =6
                ZIndex: =2

            "icoCommandBarAdvancedSearch As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.FilterFlat
                OnSelect: |
                    =//Use a function like this to navigate the user to a search all screen containing the search component
                    ClearCollect(
                        colAppNavigationThreads,
                        Table(
                            {
                                Screen: App.ActiveScreen,
                                Order: CountRows(colAppNavigationThreads) + 1
                            }
                        )
                    );
                    //Navigate to the requisition search screen resetting all the seach controls (workaround)
                    Set(
                        varResetRequisitionSearch,
                        true
                    );
                    Navigate(
                        'Requisition Search Screen',
                        ScreenTransition.Cover
                    );
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Advanced search"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width+10
                Y: =6
                ZIndex: =3

            txtCommandBarSearchInput As text:
                AccessibleLabel: =Self.HintText
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                Color: =varThemeColors.text
                Default: =If(CommandBar.ResetCommandBar,"")
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Format: =TextFormat.Number
                Height: =30
                HintText: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Search requisition number"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                HoverBorderColor: =Self.BorderColor
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.backgroundFill
                OnChange: |-
                    =Set(
                        varSelectedRequisitionID,
                        Trim(Self.Text)
                    )
                PaddingRight: =icoCommandBarSearchExecute.Width
                PressedBorderColor: =Self.BorderColor
                PressedColor: =varThemeColors.text
                PressedFill: =varThemeColors.backgroundFill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Text,
                        Self.HintText
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: |-
                    =Max(
                        125,
                        Len(Self.HintText) * 10
                    )
                X: =cmbCommandBarRecentSearch.X+cmbCommandBarRecentSearch.Width+10
                Y: =6
                ZIndex: =4

            "icoCommandBarSearchExecute As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primaryGray
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.backgroundFillDisabled
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.ArrowRight
                OnSelect: |
                    =If(
                        !IsBlank(varSelectedRequisitionID),
                    //Sets processing indicator control behavior 
                        Set(
                            varIsProcessing,
                            true
                        );
                        Set(
                            varFooterMessage,
                            "Loading"
                        );
                        
                    //Remove any existing cached requisition data whether variables or collections
                    Set(
                            varRequisition,
                            Blank()
                        );
                        
                    //Reset any controls that interact with existing requisition data
                    Reset(chbRequisitionsDetailsItemsSelectAll);
                        Reset(txtRequisitionDetailsItemsFilter);
                        Reset(galRequisitionItems);
                        
                    //Call ReadRequisition Power Automate to read the requisition from SAP
                    ClearCollect(
                            colReadRequisitionResponseTemp,//collection that temporarily stores the requisition response data
                            ReadRequisition.Run(
                                Substitute(
                                    JSON(
                                        {PurchaseRequisitionNumber: varSelectedRequisitionID},
                                        JSONFormat.IndentFour
                                    ),
                                    "null",
                                    """"""
                                )
                            )
                        );
                        
                    //Evalute response conditions
                    Switch(
                            true,
                            And(//Check to see if requisition call was successful and process happy path logic
                                First(colReadRequisitionResponseTemp).Status = "Success",
                                !IsBlank(First(colReadRequisitionResponseTemp).PurchaseRequisitionNumber)
                            ),
                            //Reset search text input
                            Reset(txtCommandBarSearchInput);
                            Set(
                                varRequisition,//Variable that stores the returned main requisition data
                                First(colReadRequisitionResponseTemp).PurchaseRequisitionNumber
                            );
                            Set(
                                varVendorHeader,//Variable that stores the returned main vendor header data
                                First(colReadRequisitionResponseTemp).Header
                            );
                            Set(//Set default sort column of items table
                                varRequisitionItemsSortByColumn,
                                btnRequisitionItemsTableHeaderItem.Text
                            );
                            Set(//Set default sort order of items table
                                varRequisitionItemsSortOrder,
                                SortOrder.Ascending
                            );
                         /*Cache associated requisition child records. Collections are used to pass updated data back in update requistion transactions
                        Default CrudType fields to 'R'. CrudType will be changed if user changes/removes child records and used by update requisition flow*/
                    UpdateIf(
                                ClearCollect(
                                    colRequisitionItems,//Collection that caches associated requisition items
                                    AddColumns(
                                        First(colReadRequisitionResponseTemp).Items,
                                        "_Total",
                                        Quantity * UnitPrice
                                    )
                                ),
                                true,
                                {CrudType: "R"}
                            );
                            //Reset controls with refreshed data
                    Reset(cmbRequisitionDetailsPurchasingOrg);
                            Reset(cmbRequisitionDetailsPurchasingGroup);
                            Reset(cmbRequisitionDetailsCurrency);
                        //Create/update requisition search history record
                    Patch(
                                'SAP Search Histories',
                                Coalesce(
                                    LookUp(
                                        'SAP Search Histories',
                                        And(
                                            'Object ID' = varRequisition,
                                            'Object Type' = 'Object Type (SAP Search Histories)'.Requisition,
                                            'Created By'.User = varSystemUserID
                                        )
                                    ),
                                    Defaults('SAP Search Histories')
                                ),
                                {
                                    'Object ID': varRequisition,
                                    'Object Type': 'Object Type (SAP Search Histories)'.Requisition,
                                    Name: Concatenate(
                                        varRequisition,
                                        " - ",
                                        varVendorHeader.VendorName
                                    ),
                                    'Last Searched On': Now()
                                }
                            );
                           //Check if the patch function was successful and notify if there was any errors.
                    If(
                                !IsEmpty(Errors('SAP Search Histories')),
                                Notify(
                                    First(Errors('SAP Search Histories')).Message,
                                    NotificationType.Error,
                                    0
                                ),
                                Reset(cmbCommandBarRecentSearch);
                                Refresh('SAP Search Histories');
                            );
                            //End if ReadRequisition Power Automate call was success
                    ,
                            And(//Flow returned and error
                                First(colReadRequisitionResponseTemp).Status = "Error",
                                IsBlank(First(colReadRequisitionResponseTemp).Header.Vendor)
                            ),
                            Notify(
                                Concat(
                                    First(colReadRequisitionResponseTemp).Messages,
                                    Message,
                                    " "
                                ),
                                NotificationType.Error,
                                0
                            ),
                            And(//Check to see if call was successful, but no requisition was found
                                First(colReadRequisitionResponseTemp).Status = "Information",
                                IsBlank(First(colReadRequisitionResponseTemp).PurchaseRequisitionNumber)
                            ),
                            Notify(
                                With(
                                    {Text: "Requisition not found"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Information,
                                7000
                            ),//Default response for an unhandled error return
                            Notify(
                                With(
                                    {Text: "Unexpected error occurred"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Error,
                                0
                            )
                        );
                        
                    //End requisition response switch statement
                    //Clear cache and stop loading indicator
                    Set(
                            varSelectedRequisitionID,//done with selected requisition ID variable, set back to blank
                            Blank()
                        );
                        Clear(colReadRequisitionResponseTemp);
                        
                    //done with read requisition temp collections, clear cache
                    Set(
                            varIsProcessing,//done processing read requisition, set variable back to false stopping any processing control behavior
                            false
                        );
                        Set(
                            varFooterMessage,
                            Blank()
                        );
                        
                    );
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =With(
                        {Text: "Execute search"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: =!Or(varIsEdit,varIsNew) && !IsBlank(txtCommandBarSearchInput.Text)
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width-Self.Width
                Y: =6
                ZIndex: =5

            cmbCommandBarRecentSearch As combobox:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: If(
                                IsEmpty(
                                    (Filter(
                                        'SAP Search Histories',
                                        'Object Type' = 'Object Type (SAP Search Histories)'.Requisition,
                                        'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                                    ))
                                ),
                                "No recent requisitions",
                                "Select recent requisition"
                            )
                        },
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                ChevronBackground: =varThemeColors.backgroundFill
                ChevronDisabledBackground: =varThemeColors.backgroundFillDisabled
                ChevronDisabledFill: |
                    =varThemeColors.text
                ChevronFill: =varThemeColors.text
                ChevronHoverBackground: =varThemeColors.secondaryGray
                ChevronHoverFill: |
                    =varThemeColors.text
                Color: =varThemeColors.text
                DefaultSelectedItems: =Blank()
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayFields: =["mpa_name","mpa_name"]
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderColor: =varThemeColors.tertiaryGray
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =varThemeColors.tertiaryGray
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.secondaryGray
                InputTextPlaceholder: =Self.AccessibleLabel
                Items: |-
                    =//Filter the 'SAP Search Histories' dataverse entity based upon the 'Object Type' value that you will to filter/display in the combo box.
                    Sort(
                        Filter(
                            'SAP Search Histories',
                            'Object Type' = 'Object Type (SAP Search Histories)'.Requisition,
                            'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                        ),
                        'Last Searched On',
                        SortOrder.Descending
                    )
                NoSelectionText: =Self.AccessibleLabel
                OnChange: |-
                    =//When user selects new recent value and not blank, invoke the same command bar search logic as if the user manually entered the requisition value
                    Reset(txtCommandBarSearchInput);
                    If(
                        And(
                            !IsBlank(Self.Selected),
                            Or(
                                Self.Selected.'Object ID' <> varRequisition,
                                IsBlank(varRequisition)
                            )
                        ),
                        Set(
                            varSelectedRequisitionID,
                            Self.Selected.'Object ID'
                        );
                        Select(icoCommandBarSearchExecute);
                        
                    )
                PaddingLeft: =12
                PaddingRight: =10
                PressedBorderColor: =varThemeColors.tertiaryGray
                PressedColor: =varThemeColors.altText
                PressedFill: =varThemeColors.backgroundFill
                Reset: =true
                SearchFields: =["mpa_name","mpa_objectid"]
                SearchItems: |-
                    =Search(//Filter the 'SAP Search Histories' dataverse entity based upon the 'Object Type' value that you will to filter/display in the combo box.
                    Sort(
                        Filter(
                            'SAP Search Histories',
                            'Object Type' = 'Object Type (SAP Search Histories)'.Requisition,
                            'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                        ),
                        'Last Searched On',
                        SortOrder.Descending
                    ),cmbCommandBarRecentSearch.SearchText,"mpa_name","mpa_objectid")
                SelectionColor: =varThemeColors.altText
                SelectionFill: =varThemeColors.primaryGray
                SelectionTagColor: =varThemeColors.text
                SelectionTagFill: =varThemeColors.backgroundFill
                SelectMultiple: =false
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Selected.Name,
                        Self.AccessibleLabel
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: |-
                    =Max(
                        250,
                        Len(Self.AccessibleLabel) * 10
                    )
                X: =shpCommandBarSearchDivider.X+shpCommandBarSearchDivider.Width+10
                Y: =6
                ZIndex: =6

            shpCommandBarSearchDivider As rectangle:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: "Divider"
                        },
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Fill: =varThemeColors.secondaryGray
                Height: =30
                OnSelect: =
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =2
                Y: =6
                ZIndex: =7

