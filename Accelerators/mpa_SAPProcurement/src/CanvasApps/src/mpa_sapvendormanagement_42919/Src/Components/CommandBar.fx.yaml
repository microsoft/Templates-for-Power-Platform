CommandBar As CanvasComponent:
    Fill: =RGBA(0, 0, 0, 0)
    Height: =44
    OnReset: |-
        =Reset(cmbCommandBarRecentSearch);
        Reset(txtCommandBarSearchInput)
    ResetCommandBar: =true
    Width: =1692
    X: =0
    Y: =0
    ZIndex: =1

    conCommandBar As groupContainer.horizontalAutoLayoutContainer:
        BorderColor: =
        Height: =CommandBar.Height-1
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutJustifyContent: =LayoutJustifyContent.SpaceBetween
        LayoutMode: =LayoutMode.Auto
        PaddingLeft: =24
        PaddingRight: =24
        Width: =CommandBar.Width
        ZIndex: =1

        conCommandBarButtons As groupContainer.horizontalAutoLayoutContainer:
            Height: =Parent.Height
            LayoutMinHeight: =
            LayoutMinWidth: =250
            LayoutMode: =LayoutMode.Auto
            ZIndex: =1

            conCommandBarButtonsCreate As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =!Or(
                        varIsEdit,
                        varIsNew
                    )
                Width: =Len(btnCommandBarButtonsCreate.Text) * 9 + btnCommandBarButtonsCreate.PaddingLeft
                ZIndex: =1

                icoCommandBarButtonsCreate As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Create"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Add
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsCreate.Y+btnCommandBarButtonsCreate.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsCreate As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            false
                        );
                        Set(
                            varIsNew,
                            true
                        );
                        //Expand all the subgrids
                        Set(
                            varExpandPurchasingOrgs,
                            true
                        );
                        Set(
                            varExpandCompanyCodes,
                            true
                        );
                        Set(
                            varExpandPhones,
                            true
                        );
                        Set(
                            varExpandEmails,
                            true
                        );
                        //Create temporary collections and cache incase the user cancels out the create action and needs to revert back to the last queried vendor
                        ClearCollect(
                            colVendorPurchasingOrgsTemp,
                            colVendorPurchasingOrgs
                        );
                        ClearCollect(
                            colVendorCompanyCodesTemp,
                            colVendorCompanyCodes
                        );
                        ClearCollect(
                            colVendorPhonesTemp,
                            colVendorPhones
                        );
                        ClearCollect(
                            colVendorEmailsTemp,
                            colVendorEmails
                        );
                        //Reset the cached data and controls to prepare for new vendor details
                        Reset(chbVendorDetailsPurchasingOrgsSelectAll);
                        Reset(txtVendorDetailsName);
                        Reset(cmbVendorDetailsAccountGroup);
                        Reset(txtVendorDetailsStreet);
                        Reset(txtVendorDetailsCity);
                        Reset(cmbVendorCountry);
                        Reset(cmbVendorDetailsStateProvince);
                        Reset(txtVendorDetailsPostalCode);
                        Clear(colVendorPurchasingOrgs);
                        Clear(colVendorCompanyCodes);
                        Clear(colVendorPhones);
                        Clear(colVendorEmails);
                        //Navigate back to Vendors Details screen if selecting to create from another screen
                        Navigate(
                            'Vendor Details Screen',
                            ScreenTransition.None
                        )
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Create"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsEdit As groupContainer.manualLayoutContainer:
                FillPortions: =0
                Height: =43
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =And(
                        !IsBlank(varVendorHeader),
                        !Or(
                            varIsEdit,
                            varIsNew
                        )
                    )
                Width: =Len(btnCommandBarButtonsEdit.Text) * 9 + btnCommandBarButtonsEdit.PaddingLeft
                X: =conCommandBarButtonsCreate.X+conCommandBarButtonsCreate.Width+10
                ZIndex: =2

                icoCommandBarButtonsEdit As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Change"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Edit
                    OnSelect: =
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsEdit.Y+btnCommandBarButtonsEdit.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsEdit As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |
                        =//Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            true
                        );
                        Set(
                            varIsNew,
                            false
                        );
                        //Expand all the subgrids
                        Set(
                            varExpandPurchasingOrgs,
                            true
                        );
                        Set(
                            varExpandCompanyCodes,
                            true
                        );
                        Set(
                            varExpandPhones,
                            true
                        );
                        Set(
                            varExpandEmails,
                            true
                        );
                        //Create temporary collections and cache incase the user cancels out the create action and needs to revert back to the last queried vendor
                        ClearCollect(
                            colVendorPurchasingOrgsTemp,
                            colVendorPurchasingOrgs
                        );
                        ClearCollect(
                            colVendorCompanyCodesTemp,
                            colVendorCompanyCodes
                        );
                        ClearCollect(
                            colVendorPhonesTemp,
                            colVendorPhones
                        );
                        ClearCollect(
                            colVendorEmailsTemp,
                            colVendorEmails
                        );
                        Navigate(
                            'Vendor Details Screen',
                            ScreenTransition.None
                        )
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Edit"},
                              If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text 
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsSave As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =Or(
                        varIsEdit,
                        varIsNew
                    )
                Width: =Len(btnCommandBarButtonsSave.Text) * 10 + btnCommandBarButtonsSave.PaddingLeft
                X: =1
                ZIndex: =3

                icoCommandBarButtonsSave As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Save"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Save
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsSave.Y+btnCommandBarButtonsSave.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsSave As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |
                        =//Reset controls, toggle reset select row variables as a work around to not being able to reset controls within galleries
                        Set(
                            varResetSelectPurchaseOrganizationRows,
                            true
                        );
                        Set(
                            varResetSelectPurchaseOrganizationRows,
                            false
                        );
                        Reset(chbVendorDetailsPurchasingOrgsSelectAll);
                        Set(
                            varResetSelectCompanyCodeRows,
                            true
                        );
                        Set(
                            varResetSelectCompanyCodeRows,
                            false
                        );
                        Reset(chbVendorDetailsCompanyCodesSelectAll);
                        Set(
                            varResetSelectPhoneRows,
                            true
                        );
                        Set(
                            varResetSelectPhoneRows,
                            false
                        );
                        Reset(chbVendorDetailsPhonesSelectAll);
                        Set(
                            varResetSelectEmailRows,
                            true
                        );
                        Set(
                            varResetSelectEmailRows,
                            false
                        );
                        Reset(chbVendorDetailsEmailsSelectAll);
                        //Check to see if all required information is populated first and build a temporary collection of required fields missing
                        Clear(colRequiredFieldsTemp);
                        If(
                            IsBlank(txtVendorDetailsName.Text),
                            Collect(
                                colRequiredFieldsTemp,
                                lblVendorDetailsName.Text
                            )
                        );
                        If(
                            IsBlank(cmbVendorDetailsAccountGroup.Selected.'Value Code'),
                            Collect(
                                colRequiredFieldsTemp,
                                lblVendorDetailsAccountGroup.Text
                            )
                        );
                        If(
                            IsBlank(cmbVendorCountry.Selected.'Value Code'),
                            Collect(
                                colRequiredFieldsTemp,
                                lblVendorCountry.Text
                            )
                        );
                        If(
                            IsEmpty(
                                Filter(
                                    colVendorPurchasingOrgs,
                                    CrudType <> "D"
                                )
                            ),
                            Collect(
                                colRequiredFieldsTemp,
                                lblVendorDetailsPurchasingOrg.Text
                            )
                        );
                        If(
                            IsEmpty(
                                Filter(
                                    colVendorCompanyCodes,
                                    CrudType <> "D"
                                )
                            ),
                            Collect(
                                colRequiredFieldsTemp,
                                lblVendorDetailsCompanyCodes.Text
                            )
                        );
                        //Check to see if required fields are populated and if not, notify which fields are missing
                        If(
                            !IsEmpty(colRequiredFieldsTemp),
                            Notify(
                                Substitute(
                                    With(
                                        {Text: "The following information is required before saving"},
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & ": " & Concat(
                                        colRequiredFieldsTemp,
                                        Value,
                                        ", "
                                    ),
                                    " *",
                                    ""
                                ),
                                NotificationType.Error,
                                0
                            );
                            ,//all required fields were filled in, process save
                            //Set footer message
                            Set(
                                varFooterMessage,
                                "Saving"
                            );
                           //Set processing variable to change processing control behavior
                        Set(
                                varIsProcessing,
                                true
                            );
                            Set(
                                varVendorJSON,//Build the vendor JSON
                                "{Header: " & JSON(//Build the vendor header JSON
                                    {
                                        Vendor: varVendorHeader.Vendor,
                                        VendorName: Trim(txtVendorDetailsName.Text),
                                        AccountGroup: cmbVendorDetailsAccountGroup.Selected.'Value Code',
                                        Street: Trim(txtVendorDetailsStreet.Text),
                                        City: Trim(txtVendorDetailsCity.Text),
                                        State: cmbVendorDetailsStateProvince.Selected.'Value Code',
                                        Country: cmbVendorCountry.Selected.'Value Code',
                                        PostalCode: Trim(txtVendorDetailsPostalCode.Text)
                                    },
                                    JSONFormat.IndentFour
                                ) & ", PurchasingOrganizations: " & JSON(//Build the vendor purchasing orgs JSON from the cached collection
                                    colVendorPurchasingOrgs,
                                    JSONFormat.IndentFour
                                ) & ", Companies: " & JSON(//Build the vendor company codes JSON from the cached collection
                                    colVendorCompanyCodes,
                                    JSONFormat.IndentFour
                                ) & ", Phones: " & JSON(//Build the vendor phones  JSON from the cached collection
                                    colVendorPhones,
                                    JSONFormat.IndentFour
                                ) & ", Emails: " & JSON(//Build the vendor emails JSON from the cached collection
                                    colVendorEmails,
                                    JSONFormat.IndentFour
                                ) & "}"
                            );
                            
                        //Replace any nulls in JSON string with empty strings before calling the flows
                        Set(
                                varVendorJSON,
                                Substitute(
                                    varVendorJSON,
                                    "null",
                                    """"""
                                )
                            );
                            
                        //Call the corresponding Power Automate depending on whether user is creating or updating a vendor
                        If(
                                varIsNew,//Create vendor
                                Set(
                                    varVendorReturn,
                                    CreateVendor.Run(varVendorJSON)
                                );
                                ,//Update vendor
                                Set(
                                    varVendorReturn,
                                    UpdateVendor.Run(varVendorJSON)
                                );
                            );
                            
                        //Set processing back to false
                        Set(
                                varIsProcessing,
                                false
                            );
                            
                        //Assess and raise any error messages and process further upon success
                        Switch(
                                varVendorReturn.Status,
                                "Error",//Raise error messages leaving variables in existing state for user to try again
                                Notify(
                                    Concat(
                                        varVendorReturn.Messages,
                                        Message,
                                        " "
                                    ),
                                    NotificationType.Error
                                ),
                                "Success",//Raise success message
                                Notify(
                                    With(
                                        {
                                            Text: If(
                                                varIsNew,
                                                "Vendor successfully created",
                                                "Vendor successfully updated"
                                            )
                                        },
                                        If(
                                // If the localized text is blank, return the default text
                                            IsBlank(
                                                LookUp(
                                                    colUserLocalizedStrings,
                                                    'English Value' = Text
                                                ).'Localized Value'
                                            ),
                                            Text,
                                // If a localized text is found, return that instead of the default text
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        )
                                    ) & " - " & varVendorReturn.Vendor,
                                    NotificationType.Success
                                );
                                Set(
                                    varSelectedVendorID,//Set selected vendor id so that the newly created/updated vendor can be refreshed at the end of the logic
                                    varVendorReturn.Vendor
                                );
                                Select(icoCommandBarSearchExecute);
                            //Query the latest SAP vendor record again to ensure any system generated data is returned
                        Set(
                                    varIsEdit,//Reset variable to not edit
                                    false
                                );
                                Set(
                                    varIsNew,//Reset variable to not be new vendor record
                                    false
                                ),//Default to raise any information messages
                                Notify(
                                    Concat(
                                        varVendorReturn.Messages,
                                        Message,
                                        " "
                                    ),
                                    NotificationType.Information
                                );
                            );
                            Set(
                                varVendorReturn,
                                Blank()
                            )
                        );
                        //Set processing back to false
                        Set(
                            varIsProcessing,
                            false
                        );
                        //Clear footer message
                        Set(
                            varFooterMessage,
                            Blank()
                        );
                        //No longer need required field temp data
                        Clear(colRequiredFieldsTemp);
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Save"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

            conCommandBarButtonsCancel As groupContainer.manualLayoutContainer:
                BorderColor: =RGBA(0, 0, 0, 0)
                BorderStyle: =BorderStyle.None
                FillPortions: =0
                Height: =Parent.Height
                LayoutMinHeight: =
                LayoutMinWidth: =250
                Visible: |-
                    =Or(
                        varIsEdit,
                        varIsNew
                    )
                Width: =Len(btnCommandBarButtonsCancel.Text) * 9 + btnCommandBarButtonsCancel.PaddingLeft
                X: =conCommandBarButtonsSave.X+conCommandBarButtonsSave.Width+10
                ZIndex: =4

                icoCommandBarButtonsCancel As icon.Save:
                    AccessibleLabel: |-
                        =// Define a variable named "Text" with the value "{value}"
                        With(
                            {
                                Text: "Cancel"
                            },
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Color: =varThemeColors.primary
                    DisabledColor: =varThemeColors.disabledText
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    FocusedBorderColor: =varThemeColors.primary
                    Height: =16
                    Icon: =Icon.Cancel
                    Width: =16
                    X: =5
                    Y: =btnCommandBarButtonsCancel.Y+btnCommandBarButtonsCancel.Height/2-Self.Height/2
                    ZIndex: =1

                btnCommandBarButtonsCancel As button:
                    Align: =Align.Left
                    BorderColor: =RGBA(0,0,0,0)
                    Color: =varThemeColors.text
                    DisabledBorderColor: =
                    DisabledColor: =varThemeColors.disabledText
                    DisabledFill: =
                    DisplayMode: |-
                        =If(
                            varIsProcessing,
                            DisplayMode.Disabled,
                            DisplayMode.Edit
                        )
                    Fill: =RGBA(0, 0, 0, 0)
                    FocusedBorderColor: =varThemeColors.tertiaryGray
                    FocusedBorderThickness: =2
                    Font: =Font.'Segoe UI'
                    FontWeight: =FontWeight.Normal
                    Height: =Parent.Height-Self.Y*2
                    HoverBorderColor: =
                    HoverColor: =varThemeColors.primary
                    HoverFill: =Color.Transparent
                    OnSelect: |-
                        =//Reset cached vendor data
                        ClearCollect(
                            colVendorPurchasingOrgs,
                            colVendorPurchasingOrgsTemp
                        );
                        ClearCollect(
                            colVendorCompanyCodes,
                            colVendorCompanyCodesTemp
                        );
                        ClearCollect(
                            colVendorPhones,
                            colVendorPhonesTemp
                        );
                        ClearCollect(
                            colVendorEmails,
                            colVendorEmailsTemp
                        );
                        //Change global variables to set visibility of other commandbar buttons, search and screen controls
                        Set(
                            varIsEdit,
                            false
                        );
                        Set(
                            varIsNew,
                            false
                        );
                        //Reset controls, toggle reset select row variables as a work around to not being able to reset controls within galleries
                        Set(
                            varResetSelectPurchaseOrganizationRows,
                            true
                        );
                        Set(
                            varResetSelectPurchaseOrganizationRows,
                            false
                        );
                        Reset(chbVendorDetailsPurchasingOrgsSelectAll);
                        Set(
                            varResetSelectCompanyCodeRows,
                            true
                        );
                        Set(
                            varResetSelectCompanyCodeRows,
                            false
                        );
                        Reset(chbVendorDetailsCompanyCodesSelectAll);
                        Set(
                            varResetSelectPhoneRows,
                            true
                        );
                        Set(
                            varResetSelectPhoneRows,
                            false
                        );
                        Reset(chbVendorDetailsPhonesSelectAll);
                        Set(
                            varResetSelectEmailRows,
                            true
                        );
                        Set(
                            varResetSelectEmailRows,
                            false
                        );
                        Reset(chbVendorDetailsEmailsSelectAll);
                        Reset(txtVendorDetailsName);
                        Reset(cmbVendorDetailsAccountGroup);
                        Reset(txtVendorDetailsStreet);
                        Reset(txtVendorDetailsCity);
                        Reset(cmbVendorCountry);
                        Reset(cmbVendorCountry);
                        Reset(cmbVendorDetailsStateProvince);
                        Reset(txtVendorDetailsPostalCode);
                        Reset(chbVendorDetailsPurchasingOrgsSelectAll);
                        Reset(chbVendorDetailsCompanyCodesSelectAll);
                        Reset(chbVendorDetailsPhonesSelectAll);
                        Reset(chbVendorDetailsEmailsSelectAll);
                        Reset(txtVendorDetailsPurchasingOrgCommandBarFilter);
                        Reset(txtVendorDetailsEmailsCommandBarFilter);
                        Reset(txtVendorDetailsPhonesCommandBarFilter);
                        Reset(txtVendorDetailsCompanyCodesCommandBarFilter);
                    PaddingLeft: =28
                    PressedColor: =Color.Black
                    PressedFill: =Color.Transparent
                    RadiusBottomLeft: =0
                    RadiusBottomRight: =0
                    RadiusTopLeft: =0
                    RadiusTopRight: =0
                    Size: =10.5
                    Text: |-
                        =With(
                            {Text: "Cancel"},
                            If(
                                // If the localized text is blank, return the default text
                                IsBlank(
                                    LookUp(
                                        colUserLocalizedStrings,
                                        'English Value' = Text
                                    ).'Localized Value'
                                ),
                                Text,
                                // If a localized text is found, return that instead of the default text
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            )
                        )
                    Tooltip: =Self.Text
                    Width: =Parent.Width-Self.X*2
                    X: =Self.FocusedBorderThickness
                    Y: =Self.FocusedBorderThickness
                    ZIndex: =2

        conCommandBarSearch As groupContainer.manualLayoutContainer:
            AlignInContainer: =AlignInContainer.SetByContainer
            BorderColor: =RGBA(0, 0, 0, 0)
            BorderStyle: =BorderStyle.None
            FillPortions: =0
            Height: =Parent.Height
            LayoutMinHeight: =100
            LayoutMinWidth: =Self.Width
            Width: =imgCommandBarSearchExecuting.X + imgCommandBarSearchExecuting.Width + 1
            ZIndex: =4

            "icoCommandBarRefreshScreen As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.Reload
                OnSelect: |
                    =//Refresh the core object data and navigate back to the default screen
                    Navigate('Vendor Details Screen');
                    Set(varSelectedVendorID,varVendorHeader.Vendor);
                    Select(icoCommandBarSearchExecute)
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Refresh"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: |-
                    =!Or(
                        varIsEdit,
                        varIsNew,
                        varIsProcessing,
                        IsBlank(varVendorHeader)
                    )
                Width: =30
                X: =imgCommandBarSearchExecuting.X
                Y: =6
                ZIndex: =1

            imgCommandBarSearchExecuting As image:
                Height: =30
                Image: ='loading-grey'
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                Visible: =varIsProcessing
                Width: =30
                X: =icoCommandBarAdvancedSearch.X+icoCommandBarAdvancedSearch.Width+7
                Y: =6
                ZIndex: =2

            "icoCommandBarAdvancedSearch As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primary
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.FilterFlat
                OnSelect: |-
                    =//Use a function like this to navigate the user to a search all screen containing the search component
                    ClearCollect(
                        colAppNavigationThreads,
                        Table(
                            {
                                Screen: App.ActiveScreen,
                                Order: CountRows(colAppNavigationThreads) + 1
                            }
                        )
                    );
                    Navigate(
                        'Vendor Search Screen',
                        ScreenTransition.Cover
                    );
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Vendor advanced search"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width+10
                Y: =6
                ZIndex: =4

            txtCommandBarSearchInput As text:
                AccessibleLabel: =Self.HintText
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                Color: =varThemeColors.text
                Default: =If(CommandBar.ResetCommandBar,"")
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderColor: =varThemeColors.tertiaryGray
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Format: =TextFormat.Number
                Height: =30
                HintText: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Search vendor number"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                HoverBorderColor: =varThemeColors.tertiaryGray
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.backgroundFill
                OnChange: |-
                    =Set(
                        varSelectedVendorID,
                        Trim(Self.Text)
                    )
                PaddingRight: =icoCommandBarSearchExecute.Width
                PressedBorderColor: =varThemeColors.tertiaryGray
                PressedColor: =varThemeColors.text
                PressedFill: =varThemeColors.backgroundFill
                RadiusBottomLeft: =0
                RadiusBottomRight: =0
                RadiusTopLeft: =0
                RadiusTopRight: =0
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Text,
                        Self.HintText
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: |-
                    =Max(
                        125,
                        Len(Self.HintText) * 10
                    )
                X: =cmbCommandBarRecentSearch.X+cmbCommandBarRecentSearch.Width+10
                Y: =6
                ZIndex: =5

            "icoCommandBarSearchExecute As icon.'3DPrinting'":
                AccessibleLabel: =Self.Tooltip
                BorderColor: =varThemeColors.primary
                Color: =varThemeColors.primaryGray
                DisabledBorderColor: =varThemeColors.disabledText
                DisabledColor: =varThemeColors.backgroundFillDisabled
                DisabledFill: =RGBA(0,0,0,0)
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =RGBA(0,0,0,0)
                FocusedBorderColor: =varThemeColors.tertiaryGray
                Height: =30
                HoverBorderColor: =
                HoverColor: =varThemeColors.primary
                HoverFill: =RGBA(0,0,0,0)
                Icon: =Icon.ArrowRight
                OnSelect: |
                    =If(
                        !IsBlank(varSelectedVendorID),
                        Set(
                            varFooterMessage,
                            "Loading"
                        );
                        //Sets processing indicator control behavior 
                    Set(
                            varIsProcessing,
                            true
                        );
                        //Remove any existing cached vendor data whether variables or collections
                    Set(
                            varVendorHeader,
                            Blank()
                        );
                        Clear(colVendorRequisitions);
                        Clear(colVendorPurchaseOrders);
                        Clear(colVendorPurchasingOrgs);
                        Clear(colVendorCompanyCodes);
                        Clear(colVendorPhones);
                        Clear(colVendorEmails);
                        //Reset any controls that interact with existing vendor data
                    Reset(chbVendorDetailsPurchasingOrgsSelectAll);
                        Reset(chbVendorDetailsCompanyCodesSelectAll);
                        Reset(chbVendorDetailsPhonesSelectAll);
                        Reset(chbVendorDetailsEmailsSelectAll);
                        Reset(txtVendorDetailsPurchasingOrgCommandBarFilter);
                        Reset(txtVendorDetailsEmailsCommandBarFilter);
                        Reset(txtVendorDetailsPhonesCommandBarFilter);
                        Reset(txtVendorDetailsCompanyCodesCommandBarFilter);
                        //Call ReadVendor Power Automate to read the vendor from SAP
                    ClearCollect(
                            colReadVendorResponseTemp,//collection that temporarily stores the vendor response data
                            ReadVendor.Run(varSelectedVendorID)
                        );
                        //Evalute response conditions
                    Switch(
                            true,
                            And(//Check to see if vendor call was successful and process happy path logic
                                First(colReadVendorResponseTemp).Status = "Success",
                                !IsBlank(First(colReadVendorResponseTemp).Header.Vendor)
                            ),
                            //Reset the search input text
                            Reset(txtCommandBarSearchInput);
                            Set(
                                varVendorHeader,//Variable that stores the returned main vendor header data
                                First(colReadVendorResponseTemp).Header
                            );
                            /*Cache associated vendor child records. Collections are used to pass updated data back in update vendor transactions
                            Default CrudType fields to 'R'. CrudType will be changed if user changes/removes child records and used by update vendor flow*/
                    UpdateIf(
                                ClearCollect(
                                    colVendorEmails,//Colllection that caches associated vendor emails
                                    First(colReadVendorResponseTemp).Emails
                                ),
                                true,
                                {CrudType: "R"}
                            );
                            Set(
                                varExpandEmails,
                                !IsEmpty(colVendorEmails)
                            );
                            UpdateIf(
                                ClearCollect(
                                    colVendorPhones,//Collection that caches associated associated vendor phones
                                    First(colReadVendorResponseTemp).Phones
                                ),
                                true,
                                {CrudType: "R"}
                            );
                            Set(
                                varExpandPhones,
                                !IsEmpty(colVendorPhones)
                            );
                            UpdateIf(
                                ClearCollect(
                                    colVendorCompanyCodes,//Collection that caches associated vendor company codes
                                    First(colReadVendorResponseTemp).CompanyCodes
                                ),
                                true,
                                {CrudType: "R"}
                            );
                            Set(
                                varExpandCompanyCodes,
                                !IsEmpty(colVendorCompanyCodes)
                            );
                            UpdateIf(
                                ClearCollect(
                                    colVendorPurchasingOrgs,//Collection that caches associated vendor purchasing organizations
                                    First(colReadVendorResponseTemp).PurchasingOrgs
                                ),
                                true,
                                {CrudType: "R"}
                            );
                            Set(
                                varExpandPurchasingOrgs,
                                !IsEmpty(colVendorPurchasingOrgs)
                            );
                            Set(
                                varSelectedVendorID,//done with selected vendor ID variable, set back to blank
                                Blank()
                            );
                            //Navigate back to vendor details screen by default
                    Navigate(
                                'Vendor Details Screen',
                                ScreenTransition.None
                            );
                            //Create/update vendor search history record
                    Patch(
                                'SAP Search Histories',
                                Coalesce(
                                    LookUp(
                                        'SAP Search Histories',
                                        And(
                                            'Object ID' = varVendorHeader.Vendor,
                                            'Object Type' = 'Object Type (SAP Search Histories)'.Vendor,
                                            'Created By'.User = varSystemUserID
                                        )
                                    ),
                                    Defaults('SAP Search Histories')
                                ),
                                {
                                    'Object ID': varVendorHeader.Vendor,
                                    'Object Type': 'Object Type (SAP Search Histories)'.Vendor,
                                    Name: varVendorHeader.VendorName,
                                    'Attribute 1': Concatenate(
                                        varVendorHeader.Vendor,
                                        "-",
                                        varVendorHeader.VendorName
                                    ),
                                    'Last Searched On': Now()
                                }
                            );
                            //Check if the patch function was successful and notify if there was any errors.
                    If(
                                !IsEmpty(Errors('SAP Search Histories')),
                                Notify(
                                    First(Errors('SAP Search Histories')).Message,
                                    NotificationType.Error,
                                    0
                                ),
                                Refresh('SAP Search Histories')
                            );
                            //End if ReadVendor Power Automate call was success
                    ,
                            And(//Flow returned and error
                                First(colReadVendorResponseTemp).Status = "Error",
                                IsBlank(First(colReadVendorResponseTemp).Header.Vendor)
                            ),
                            Notify(
                                Concat(
                                    First(colReadVendorResponseTemp).Messages,
                                    Message,
                                    " "
                                ),
                                NotificationType.Error,
                                0
                            ),
                            And(//Check to see if call was successful, but no vendor was found
                                First(colReadVendorResponseTemp).Status = "Information",
                                IsBlank(First(colReadVendorResponseTemp).Header.Vendor)
                            ),
                            Notify(
                                With(
                                    {Text: "Vendor not found"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Information,
                                7000
                            ),//Default response for an unhandled error return
                            Notify(
                                With(
                                    {Text: "Unexpected error occurred"},
                                    If(
                            // If the localized text is blank, return the default text
                                        IsBlank(
                                            LookUp(
                                                colUserLocalizedStrings,
                                                'English Value' = Text
                                            ).'Localized Value'
                                        ),
                                        Text,
                            // If a localized text is found, return that instead of the default text
                                        LookUp(
                                            colUserLocalizedStrings,
                                            'English Value' = Text
                                        ).'Localized Value'
                                    )
                                ),
                                NotificationType.Error,
                                7000
                            )
                        );
                        Reset(cmbCommandBarRecentSearch);
                        //End vendor response switch statement
                        //Reset loading to false as the data query is complete
                    Set(
                            varSelectedVendorID,//done with selected vendor ID variable, set back to blank
                            Blank()
                        );
                       //done with read vendor temp collections, clear cache
                    Clear(colReadVendorResponseTemp);
                        Set(
                            varIsProcessing,//done processing read vendor, set variable back to false stopping any processing control behavior
                            false
                        );
                        
                    );
                    Set(
                        varFooterMessage,
                        Blank()
                    );
                PaddingBottom: =5
                PaddingLeft: =5
                PaddingRight: =5
                PaddingTop: =5
                PressedBorderColor: =
                PressedColor: =
                PressedFill: =RGBA(0,0,0,0)
                TabIndex: =0
                Tooltip: |-
                    =With(
                        {Text: "Execute search"},
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Visible: =!Or(varIsEdit,varIsNew) && !IsBlank(txtCommandBarSearchInput.Text)
                Width: =30
                X: =txtCommandBarSearchInput.X+txtCommandBarSearchInput.Width-Self.Width
                Y: =6
                ZIndex: =6

            cmbCommandBarRecentSearch As combobox:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {Text: "Select recent vendor"},
                        // Check if a localized text exists for "Text" in the user's preferred language
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                BorderColor: =varThemeColors.primaryGray
                BorderThickness: =1
                ChevronBackground: =varThemeColors.backgroundFill
                ChevronDisabledBackground: =varThemeColors.backgroundFillDisabled
                ChevronDisabledFill: |
                    =varThemeColors.text
                ChevronFill: =varThemeColors.text
                ChevronHoverBackground: =varThemeColors.secondaryGray
                ChevronHoverFill: |
                    =varThemeColors.text
                Color: =varThemeColors.text
                DefaultSelectedItems: =Blank()
                DisabledBorderColor: =varThemeColors.primaryGray
                DisabledColor: =varThemeColors.disabledText
                DisabledFill: =varThemeColors.backgroundFillDisabled
                DisplayFields: =["mpa_attribute1","mpa_objectid"]
                DisplayMode: |-
                    =If(
                        varIsProcessing,
                        DisplayMode.Disabled,
                        DisplayMode.Edit
                    )
                Fill: =varThemeColors.backgroundFill
                FocusedBorderThickness: =2
                Font: =Font.'Segoe UI'
                Height: =30
                HoverBorderColor: =Self.BorderColor
                HoverColor: =varThemeColors.text
                HoverFill: =varThemeColors.secondaryGray
                InputTextPlaceholder: =Self.AccessibleLabel
                Items: |-
                    =//Filter the 'SAP Search Histories' dataverse entity based upon the 'Object Type' value that you will to filter/display in the combo box.
                    Sort(
                        Filter(
                            'SAP Search Histories',
                            'Object Type' = 'Object Type (SAP Search Histories)'.Vendor,
                            'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                        ),
                        'Last Searched On',
                        SortOrder.Descending
                    )
                NoSelectionText: =Self.AccessibleLabel
                OnChange: |-
                    =//When user selects new recent value and not blank, invoke the same command bar search logic as if the user manually entered the vendor value
                    Reset(txtCommandBarSearchInput);
                    If(
                        And(
                            !IsBlank(Self.Selected),
                            Or(
                                Self.Selected.'Object ID' <> varVendorHeader.Vendor,
                                IsBlank(varVendorHeader.Vendor)
                            )
                        ),
                        Set(
                            varSelectedVendorID,
                            Self.Selected.'Object ID'
                        );
                        Select(icoCommandBarSearchExecute);
                        
                    )
                PaddingLeft: =12
                PaddingRight: =10
                PressedBorderColor: =Self.BorderColor
                PressedColor: =varThemeColors.altText
                PressedFill: =varThemeColors.backgroundFill
                SearchFields: =["mpa_attribute1"]
                SearchItems: |-
                    =Search(//Filter the 'SAP Search Histories' dataverse entity based upon the 'Object Type' value that you will to filter/display in the combo box.
                    Sort(
                        Filter(
                            'SAP Search Histories',
                            'Object Type' = 'Object Type (SAP Search Histories)'.Vendor,
                            'SAP Search Histories (Views)'.'My Recent SAP Search History'//View in Dataverse specifically designed to only returned records within a timeframe
                        ),
                        'Last Searched On',
                        SortOrder.Descending
                    ),cmbCommandBarRecentSearch.SearchText,"mpa_attribute1")
                SelectionColor: =varThemeColors.altText
                SelectionFill: =varThemeColors.primaryGray
                SelectionTagColor: =varThemeColors.text
                SelectionTagFill: =varThemeColors.backgroundFill
                SelectMultiple: =false
                Size: =10.5
                Tooltip: |-
                    =Coalesce(
                        Self.Selected.Name,
                        Self.AccessibleLabel
                    )
                Visible: =!Or(varIsEdit,varIsNew)
                Width: |-
                    =Max(
                        250,
                        Len(Self.AccessibleLabel) * 10
                    )
                X: =shpCommandBarSearchDivider.X+shpCommandBarSearchDivider.Width+10
                Y: =6
                ZIndex: =7

            shpCommandBarSearchDivider As rectangle:
                AccessibleLabel: |-
                    =// Define a variable named "Text" with the value "{value}"
                    With(
                        {
                            Text: "Divider"
                        },
                        If(
                            // If the localized text is blank, return the default text
                            IsBlank(
                                LookUp(
                                    colUserLocalizedStrings,
                                    'English Value' = Text
                                ).'Localized Value'
                            ),
                            Text,
                            // If a localized text is found, return that instead of the default text
                            LookUp(
                                colUserLocalizedStrings,
                                'English Value' = Text
                            ).'Localized Value'
                        )
                    )
                Fill: =varThemeColors.secondaryGray
                Height: =30
                OnSelect: =
                Visible: =!Or(varIsEdit,varIsNew)
                Width: =2
                Y: =6
                ZIndex: =8

